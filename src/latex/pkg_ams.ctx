// -*- mode:js;coding:utf-8 -*-

// Package
//   \usepackage{latexsym}
//   \usepackage{amssymb}
//   \usepackage{amsmath}
// ChangeLog
//   2013-09-02, KM
//     * documentclass.ctx から分離・作成
// References
//
// 公開

/** pkg_ams.ctx
 *
 *  @section 公開オブジェクト
 *    ※以下 pkg_ams = ns.Modules["pkg:ams"] とする。
 *
 *    @fn pkg_ams.DefineDotsForCommand(cmdName,dotsType)
 *    @fn pkg_ams.DefineDotsForCommand({cmdName:dotsType})
 *    @fn pkg_ams.DefineDotsForLetter(letter,dotsType)
 *    @fn pkg_ams.DefineDotsForLetter({letter:dotsType})
 */

var mod_core=ns.Modules["core"];
var mod_base=ns.Modules["mod:base"];
var mod_array=ns.Modules["mod:array"];
var mod_math=ns.Modules["mod:math"];
var _Mod=ns.Modules["pkg:ams"]={};

//******************************************************************************
//  \usepackage{latexsym}
//==============================================================================
context "pkg:latexsym/mode.math" new(){
  _Ctx.DefineCommand({
    lhd     : ['s@','<tex:fsym class="aghtex-binop mc">&#x22B2;</tex:fsym>'],
    rhd     : ['s@','<tex:fsym class="aghtex-binop mc">&#x22B3;</tex:fsym>'],
    unlhd   : ['s@','<tex:fsym class="aghtex-binop mc">&#x22B4;</tex:fsym>'],
    unrhd   : ['s@','<tex:fsym class="aghtex-binop mc">&#x22B5;</tex:fsym>'],
    mho     : ['s@','<tex:fsym class="aghtex-binop mc">℧</tex:fsym>'],
    leadsto : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21DD;</tex:fsym>'],
    Join    : ['s@','<tex:fsym class="aghtex-binop mc">⋈</tex:fsym>'],
    Box     : ['s@','<tex:small1>□</tex:small1>'],
    sqsubset: ['s@','<tex:fsym class="aghtex-binop mc">⊏</tex:fsym>'],
    sqsupset: ['s@','<tex:fsym class="aghtex-binop mc">⊐</tex:fsym>'],
    Diamond : ['s@','<tex:fsym class="aghtex-binop">◇</tex:fsym>'],

    // \iint \iiint \iiiint \idotsint
    iint    : ['f',function(doc,cmdName){mod_math['cmd:int'](doc,'&#x222C;');}],
    iiint   : ['f',function(doc,cmdName){mod_math['cmd:int'](doc,'&#x222D;');}],
    iiiint  : ['f',function(doc,cmdName){mod_math['cmd:int'](doc,'&#x2A0C;');}],
    idotsint: ['f',function(doc,cmdName){mod_math['cmd:int'](doc,'&#x222B;<tex:fsym class="aghtex-dotsi">&#x22EF;</tex:fsym>&#x222B;');}],

    varlimsup : ['s',@'\mathop\overline\mathrm{lim}'],
    varliminf : ['s',@'\mathop\underline\mathrm{lim}'],
    varinjlim : ['s',@'\mathop\underrightarrow\mathrm{lim}'],
    varprojlim: ['s',@'\mathop\underleftarrow\mathrm{lim}']
  });
}
ns.Document.Packages["latexsym"]=function(doc,opt,pkgName){
  doc.context_cast("mode.math").AddBaseContext(doc.context_cast("pkg:latexsym/mode.math"));
};
//******************************************************************************
//  \usepackage{amssymb}
//==============================================================================
context "pkg:amssymb/mode.math" new(){
  _Ctx.DefineCommand({
    mathbb             : ['s@;#>1',(
      // Sf/Cr: text-stroke
      agh.browser.vSf?'<tex:fmbb class="aghtex-mathbb-stroke">#1</tex:fmbb>':
      // Cr/Op/Fx: text-shadow
      agh.browser.vCr||agh.browser.vOp||agh.browser.vFx>=3.5?'<tex:fmbb class="aghtex-mathbb-shadow">#1</tex:fmbb>':
      // IE: filter:glow
      agh.browser.vIE?'<tex:fmbb class="aghtex-mathbb-glow">#1</tex:fmbb>':
      // Old versions: multiple overlays
      '<tex:i class="aghtex-mathbb-old"><tex:i class="aghtex-mathbb-a">#1</tex:i><tex:i class="aghtex-mathbb-b">#1</tex:i><tex:i class="aghtex-mathbb-c">#1</tex:i><tex:i class="aghtex-mathbb-d">#1</tex:i><tex:i class="aghtex-mathbb-e">#1</tex:i>#1</tex:i>'
    )],

    mathfrak           : ['s@;#>1','<tex:fmfrk>#1</tex:fmfrk>'],

    lessdot            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋖</tex:fsym>'],
    gtrdot             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋗</tex:fsym>'],
    doteqdot           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≑</tex:fsym>'],
    leqslant           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a7d;</tex:fsym>'],
    geqslant           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a7e;</tex:fsym>'],
    risingdotseq       : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≓</tex:fsym>'],
    eqslantless        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a95;</tex:fsym>'],
    eqslantgtr         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a96;</tex:fsym>'],
    fallingdotseq      : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≒</tex:fsym>'],
    leqq               : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≦</tex:fsym>'],
    geqq               : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≧</tex:fsym>'],
    eqcirc             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≖</tex:fsym>'],
    lll                : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋘</tex:fsym>'],
    ggg                : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋙</tex:fsym>'],
    circeq             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≗</tex:fsym>'],
    lesssim            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≲</tex:fsym>'],
    gtrsim             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≳</tex:fsym>'],
    triangleq          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≜</tex:fsym>'],
    lessapprox         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a85;</tex:fsym>'],
    gtrapprox          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a86;</tex:fsym>'],
    bumpeq             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≏</tex:fsym>'],
    lessgtr            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≶</tex:fsym>'],
    gtrless            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≷</tex:fsym>'],
    Bumpeq             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≎</tex:fsym>'],
    lesseqgtr          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋚</tex:fsym>'],
    gtreqless          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋛</tex:fsym>'],
    thicksim           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">∼</tex:fsym>'],
    lesseqqgtr         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a8b;</tex:fsym>'],
    gtreqqless         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a8c;</tex:fsym>'],
    thickapprox        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≈</tex:fsym>'],
    preccurlyeq        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≼</tex:fsym>'],
    succcurlyeq        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≽</tex:fsym>'],
    approxeq           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≊</tex:fsym>'],
    curlyeqprec        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋞</tex:fsym>'],
    curlyeqsucc        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋟</tex:fsym>'],
    backsim            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">∽</tex:fsym>'],
    precsim            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≾</tex:fsym>'],
    succsim            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≿</tex:fsym>'],
    backsimeq          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋍</tex:fsym>'],
    precapprox         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2ab7;</tex:fsym>'],
    succapprox         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2ab8;</tex:fsym>'],
    vDash              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⊨</tex:fsym>'],
    subseteqq          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2ac5;</tex:fsym>'],
    supseteqq          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2ac6;</tex:fsym>'],
    Vdash              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⊩</tex:fsym>'],
    Subset             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋐</tex:fsym>'],
    Supset             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋑</tex:fsym>'],
    Vvdash             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⊪</tex:fsym>'],
    sqsubset           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⊏</tex:fsym>'],
    sqsupset           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⊐</tex:fsym>'],
    backepsilon        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x03f6;</tex:fsym>'],
    therefore          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">∴</tex:fsym>'],
    because            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">∵</tex:fsym>'],
    varpropto          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">∝</tex:fsym>'],
    shortmid           : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2223;</tex:fsym>'],
    shortparallel      : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2225;</tex:fsym>'],
    between            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">≬</tex:fsym>'],
    smallsmile         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⌣</tex:fsym>'], // ■TODO:small version
    smallfrown         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⌢</tex:fsym>'], // ■TODO:small version
    pitchfork          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⋔</tex:fsym>'],
    vartriangleleft    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⊲</tex:fsym>'],
    vartriangleright   : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⊳</tex:fsym>'],
    blacktriangleleft  : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">◄</tex:fsym>'],
    blacktriangleright : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">►</tex:fsym>'],
    trianglelefteq     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⊴</tex:fsym>'],
    trianglerighteq    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">⊵</tex:fsym>'],

    nless              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x226e;</tex:fsym>'],
    ngtr               : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x226f;</tex:fsym>'],
    varsubsetneqq      : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2ac8;</tex:fsym>'],
    varsupsetneqq      : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2ac9;</tex:fsym>'],
    lneq               : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a87;</tex:fsym>'],
    gneq               : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a88;</tex:fsym>'],
    nleq               : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2270;</tex:fsym>'],
    ngeq               : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2271;</tex:fsym>'],
    nsubseteqq         : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2288;</tex:fsym>'],
    nsupseteqq         : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2289;</tex:fsym>'],
    nleqslant          : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2274;</tex:fsym>'],
    ngeqslant          : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2275;</tex:fsym>'],
    lneqq              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2268;</tex:fsym>'],
    gneqq              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2269;</tex:fsym>'],
    nmid               : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2224;</tex:fsym>'],
    nparallel          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2226;</tex:fsym>'],
    lvertneqq          : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2268;</tex:fsym>'],
    gvertneqq          : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2269;</tex:fsym>'],
    nleqq              : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2270;</tex:fsym>'],
    ngeqq              : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2271;</tex:fsym>'],
    nshortmid          : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2224;</tex:fsym>'],
    nshortparallel     : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x2226;</tex:fsym>'],
    lnsim              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22e6;</tex:fsym>'],
    gnsim              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22e7;</tex:fsym>'],
    lnapprox           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a89;</tex:fsym>'],
    gnapprox           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2a8a;</tex:fsym>'],
    nsim               : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2241;</tex:fsym>'],
    ncong              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2247;</tex:fsym>'],
    nprec              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2280;</tex:fsym>'],
    nsucc              : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2281;</tex:fsym>'],
    npreceq            : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x22e0;</tex:fsym>'],
    nsucceq            : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x22e1;</tex:fsym>'],
    nvdash             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22ac;</tex:fsym>'],
    nvDash             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22ad;</tex:fsym>'],
    precneqq           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2ab5;</tex:fsym>'],
    succneqq           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2ab6;</tex:fsym>'],
    precnsim           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22e8;</tex:fsym>'],
    succnsim           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22e9;</tex:fsym>'],
    nVdash             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22ae;</tex:fsym>'],
    nVDash             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22af;</tex:fsym>'],
    precnapprox        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2ab9;</tex:fsym>'],
    succnapprox        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2aba;</tex:fsym>'],
    subsetneq          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x228a;</tex:fsym>'],
    supsetneq          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x228b;</tex:fsym>'],
    ntriangleleft      : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22ea;</tex:fsym>'],
    ntriangleright     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22eb;</tex:fsym>'],
    varsubsetneq       : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x228a;</tex:fsym>'],
    varsupsetneq       : ['s@','<tex:fsym class="aghtex-binop aghtex-syma-mincho">&#x228b;</tex:fsym>'],
    nsubseteq          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2288;</tex:fsym>'],
    nsupseteq          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2289;</tex:fsym>'],
    ntrianglelefteq    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22ec;</tex:fsym>'],
    ntrianglerighteq   : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22ed;</tex:fsym>'],
    subsetneqq         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2acb;</tex:fsym>'],
    supsetneqq         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2acc;</tex:fsym>'],
    nleftarrow         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x219a;</tex:fsym>'],
    nrightarrow        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x219b;</tex:fsym>'],
    nleftrightarrow    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21ae;</tex:fsym>'],
    nLeftrightarrow    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21ce;</tex:fsym>'],
    nLeftarrow         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21cd;</tex:fsym>'],
    nRightarrow        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21cf;</tex:fsym>'],

    dotplus            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2214;</tex:fsym>'],
    centerdot          : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22c5;</tex:fsym>'],
    intercal           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22ba;</tex:fsym>'],
    divideontimes      : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22c7;</tex:fsym>'],
    ltimes             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22c9;</tex:fsym>'],
    rtimes             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22ca;</tex:fsym>'],
    Cup                : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22d3;</tex:fsym>'],
    Cap                : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22d2;</tex:fsym>'],
    smallsetminus      : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2216;</tex:fsym>'],
    doublebarwedge     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x2306;</tex:fsym>'],
    veebar             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22bb;</tex:fsym>'],
    barwedge           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22bc;</tex:fsym>'],
    boxplus            : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x229e;</tex:fsym>'],
    boxminus           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x229f;</tex:fsym>'],
    circleddash        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x229d;</tex:fsym>'],
    circledcirc        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x229a;</tex:fsym>'],
    boxtimes           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22a0;</tex:fsym>'],
    boxdot             : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22a1;</tex:fsym>'],
    leftthreetimes     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22cb;</tex:fsym>'],
    rightthreetimes    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22cc;</tex:fsym>'],
    curlyvee           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22ce;</tex:fsym>'],
    curlywedge         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22cf;</tex:fsym>'],
    circledast         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x229b;</tex:fsym>'],

    dashleftarrow      : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21e0;</tex:fsym>'], // ■mwg_mathsymb:TODO
    dashrightarrow     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21e2;</tex:fsym>'], // ■mwg_mathsymb:TODO
    leftleftarrows     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21c7;</tex:fsym>'],
    rightrightarrows   : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21c9;</tex:fsym>'],
    upuparrows         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21c8;</tex:fsym>'],
    downdownarrows     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21ca;</tex:fsym>'],
    leftrightarrows    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21c6;</tex:fsym>'],
    rightleftarrows    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21c4;</tex:fsym>'],
    Lleftarrow         : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21da;</tex:fsym>'],
    Rrightarrow        : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21db;</tex:fsym>'],
    upharpoonleft      : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21bf;</tex:fsym>'],
    upharpoonright     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21be;</tex:fsym>'],
    twoheadleftarrow   : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x219e;</tex:fsym>'],
    twoheadrightarrow  : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21a0;</tex:fsym>'],
    leftarrowtail      : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21a2;</tex:fsym>'],
    rightarrowtail     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21a3;</tex:fsym>'],
    downharpoonleft    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21c3;</tex:fsym>'],
    downharpoonright   : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21c2;</tex:fsym>'],
    leftrightharpoons  : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21cb;</tex:fsym>'],
    rightleftharpoons  : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21cc;</tex:fsym>'],
    Lsh                : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21b0;</tex:fsym>'],
    Rsh                : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21b1;</tex:fsym>'],
    looparrowleft      : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21ab;</tex:fsym>'],
    looparrowright     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21ac;</tex:fsym>'],
    curvearrowleft     : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21b6;</tex:fsym>'],
    curvearrowright    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21b7;</tex:fsym>'],
    circlearrowleft    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21ba;</tex:fsym>'],
    circlearrowright   : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21bb;</tex:fsym>'],
    leftrightsquigarrow: ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21ad;</tex:fsym>'],
    multimap           : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22b8;</tex:fsym>'],
    rightsquigarrow    : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x21dd;</tex:fsym>'],

    ulcorner           : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x250c;</tex:fsym>'],
    urcorner           : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x2510;</tex:fsym>'],
    llcorner           : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x2514;</tex:fsym>'],
    lrcorner           : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x2518;</tex:fsym>'],

    Box                : ['s@','<tex:small1>□</tex:small1>'],
    Diamond            : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x25c7;</tex:fsym>'],
    hbar               : ['s@','<tex:fsym class="aghtex-symb-roman">ħ</tex:fsym>'],
    hslash             : ['s@','<tex:fsym class="aghtex-symb-mincho">ℏ</tex:fsym>'],
    Bbbk               : ['s@','<tex:fsym class="aghtex-symb-mincho">k</tex:fsym>'],
    square             : ['s@','<tex:fsym class="aghtex-symb-mincho">□</tex:fsym>'],
    blacksquare        : ['s@','<tex:fsym class="aghtex-symb-mincho">■</tex:fsym>'],
    circledS           : ['s@','<tex:fsym class="aghtex-symb-mincho">Ⓢ</tex:fsym>'],
    vartriangle        : ['s@','<tex:fsym class="aghtex-symb-mincho">△</tex:fsym>'],
    blacktriangle      : ['s@','<tex:fsym class="aghtex-symb-mincho">▲</tex:fsym>'],
    complement         : ['s@','<tex:fsym class="aghtex-symb-mincho">∁</tex:fsym>'],
    triangledown       : ['s@','<tex:fsym class="aghtex-symb-mincho">▽</tex:fsym>'],
    blacktriangledown  : ['s@','<tex:fsym class="aghtex-symb-mincho">▼</tex:fsym>'],
    Game               : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x2141;</tex:fsym>'],
    lozenge            : ['s@','<tex:fsym class="aghtex-symb-mincho">◊</tex:fsym>'],
    blacklozenge       : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x29eb;</tex:fsym>'],
    bigstar            : ['s@','<tex:fsym class="aghtex-symb-mincho">★</tex:fsym>'],
    angle              : ['s@','<tex:fsym class="aghtex-symb-mincho">∠</tex:fsym>'],
    measuredangle      : ['s@','<tex:fsym class="aghtex-symb-mincho">∡</tex:fsym>'],
    sphericalangle     : ['s@','<tex:fsym class="aghtex-symb-mincho">∢</tex:fsym>'],
    diagup             : ['s@','<tex:fsym class="aghtex-symb-mincho">╱</tex:fsym>'],
    diagdown           : ['s@','<tex:fsym class="aghtex-symb-mincho">╲</tex:fsym>'],
    backprime          : ['s@','<tex:fsym class="aghtex-symb-mincho">‵</tex:fsym>'],
    nexists            : ['s@','<tex:fsym class="aghtex-symb-mincho">∄</tex:fsym>'],
    Finv               : ['s@','<tex:fsym class="aghtex-symb-mincho">Ⅎ</tex:fsym>'],
    varnothing         : ['s@','<tex:fsym class="aghtex-symb-mincho">∅</tex:fsym>'],
    eth                : ['s@','<tex:fsym class="aghtex-symb-mincho">ð</tex:fsym>'],
    mho                : ['s@','<tex:fsym class="aghtex-symb-mincho">℧</tex:fsym>'],

    digamma            : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x03dc;</tex:fsym>'],
    beth               : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x2136;</tex:fsym>'],
    daleth             : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x2138;</tex:fsym>'],
    gimel              : ['s@','<tex:fsym class="aghtex-symb-mincho">&#x2137;</tex:fsym>'],

    // integrals
    iint               : ['f',function(doc,cmdName){mod_math['cmd:int'](doc,'&#x222C;');}],
    iiint              : ['f',function(doc,cmdName){mod_math['cmd:int'](doc,'&#x222D;');}],
    iiiint             : ['f',function(doc,cmdName){mod_math['cmd:int'](doc,'&#x2A0C;');}]
  });
}
ns.Document.Packages["amssymb"]=function(doc,opt,pkgName){
  doc.context_cast("mode.math").AddBaseContext(doc.context_cast("pkg:amssymb/mode.math"));
};
//******************************************************************************
//  \usepackage{amsmath}
//    ftp://ftp.ams.org/pub/tex/doc/amsmath/amsldoc.pdf
//==============================================================================
context "pkg:amsmath/mode.para" new(){
  environment s@:mode.math\equation*()  '<tex:math class="aghtex-displaymath">#0</tex:math>';

  _Ctx.DefineCommand({
    // \AmS
    "AmS": ['s@','<tex:AmS>A<span>M</span>S</tex:AmS>'],

    // CHK: 以下は paragraph mode でも使えるのか?
    dots : ['s@','<tex:fsym class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:fsym>'],
    ldots: ['s@','<tex:fsym class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:fsym>']
  });

  _Ctx.DefineEnvironment({
    "align*"   : mod_array["envdef:align*"],
    "align"    : mod_array["envdef:align"],
    "alignat*" : mod_array["envdef:alignat*"],
    "alignat"  : mod_array["envdef:alignat"],
    "flalign*" : mod_array["envdef:flalign*"],
    "flalign"  : mod_array["envdef:flalign"],
    "gather*"  : mod_array["envdef:gather*"],
    "gather"   : mod_array["envdef:gather"],
    "multline*": mod_array["envdef:multline*"],
    "multline" : mod_array["envdef:multline"]
  });
}
context "pkg:amsmath/mode.math" new(){

  _Ctx.DefineCommand({
    boldsymbol: ['s@;#>1',@"<tex:fmbm>#1</tex:fmbm>"],
    substack  : ['s;#1',@"\begin{array}{c}#1\end{array}"],

    // 色々なスタイルの分数
    dfrac     : ['f;#>1#>2',function(doc,argv){mod_math.CH_FRAC(doc,argv);}],
    tfrac     : ['f;#>1#>2',function(doc,argv){mod_math.CH_FRAC(doc,argv);}]
  });

  //--------------------------------------------------------------------------
  //  \cfrac
  //--------------------------------------------------------------------------
  var cfrac_html=null;
  if(agh.browser.vIE){
    cfrac_html=(
      '<table cellspacing="0" class="aghtex-frac">'
      +'<tr><td class="tex-num" style="text-align:$!important;">$</td></tr>'
      +'<tr><td class="tex-den" style="text-align:$!important;">$</td></tr></table>'
    ).split(/\$/g);
  }else{
    cfrac_html=(
      '<tex:frac><tex:num style="text-align:$!important;">$</tex:num>'
      +'<tex:den style="text-align:$!important;">$</tex:den></tex:frac>'
    ).split(/\$/g);
  }
  _Ctx.DefineCommand({cfrac:['f;#[c]!1#>2#>3',function(doc,argv){
    var output=doc.currentCtx.output;
    var align=
        argv[1]=="r"?"right":
        argv[1]=="l"?"left":
        argv[1]=="c"?"center":
        "";
    if(align==""){
      output.error(
        "\\cfrac[alignment]..",
        "alignment の指定が誤っています。\n"
          +"'"+argv[1]+"' は認識出来ない alignment です。\n"
          +"lcr の何れかを指定して下さい。"
      );
      align="center";
    }
    output.buff.push(
      cfrac_html[0],align,
      cfrac_html[1],argv[2],
      cfrac_html[2],align,
      cfrac_html[3],argv[3],
      cfrac_html[4]);
  }]});

  environment s:mode.math\cases() @"\left\{\begin{array}{lc}#0\end{array}\right.";
  environment s:mode.math\split() @"\begin{array}{r@{}l}#0\end{array}";

  // \AmS
  _Ctx.DefineCommand({AmS:['s@','<tex:AmS>A<span>M</span>S</tex:AmS>']});

  // \binom, \tbinom, \dbinom, \genfrac
  function cmd_genfrac(doc,left,right,barWidth,style,htNumerator,htDenominator){
    // TODO: style=0: displaystyle, 1: textstyle, 2: scriptstyle, 3: scriptscriptstyle, other: normal

    var output=doc.currentCtx.output;
    var buff=output.buff;
    buff.push('<table cellspacing="0" class="aghtex-inline"><tr class="aghtex-cmdleft">');
    if(left)
      mod_base.OutputStretchBracketTd(output,left,2);

    buff.push('<td align="center" class="aghtex-center"');
    if(barWidth&&barWidth!="")
      buff.push(' style="border-bottom:',barWidth,' solid black;"');
    buff.push('>',htNumerator,'</td>');

    if(right)
      mod_base.OutputStretchBracketTd(output,right,2);
    buff.push('</tr><tr><td align="center" class="aghtex-center">',htDenominator,'</td></tr></table>');
  }

  _Ctx.DefineCommand({
    binom  : ['f;#>1#>2',function(doc,argv){cmd_genfrac(doc,'(',')',null,null,argv[1],argv[2]);}],
    tbinom : ['f;#>1#>2',function(doc,argv){cmd_genfrac(doc,'(',')',null,1,argv[1],argv[2]);}],
    dbinom : ['f;#>1#>2',function(doc,argv){cmd_genfrac(doc,'(',')',null,0,argv[1],argv[2]);}],
    genfrac: ['f;#>1#>2#>3#>4#>5#>6',function(doc,argv){cmd_genfrac(doc,argv[1],argv[2],argv[3],argv[4],argv[5],argv[6]);}]
  });

  // TODO: command s:mode.math\uproot
  // TODO: command s:mode.math\leftroot

  //---------------------------------------------------------------------------
  // dots

  var DOTSO=0; // comma
  var DOTSC=1; // comma
  var DOTSB=2; // binary
  var DOTSM=3; // multiply
  var DOTSI=4; // int
  var cmd_dots_table={};

  _Ctx.DefineCommand({
    dotsc: ['s@','<tex:fsym class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:fsym>' ], // dots comma,    下付三点
    dotsb: ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22EF;</tex:fsym>'], // dots binary,   中央三点
    dotsm: ['s@','<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22EF;</tex:fsym>'], // dots multiply, 中央三点
    dotso: ['s@','<tex:fsym class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:fsym>' ], // dots other,    下付三点
    dotsi: ['f',function(doc,argv){
      // dots integral, 中央三点
      if(!mod_math.GetMathStyle(doc))
        doc.currentCtx.output.buff.push('<tex:fsym class="aghtex-dotsi">&#x22EF;</tex:fsym>');
      else
        doc.currentCtx.output.buff.push('<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22EF;</tex:fsym>');
    }],
    dots : ['f',function(doc,argv){
      doc.skipSpaceAndComment();

      switch(doc.scanner.wordtype){
      case mod_core.SCAN_WT_LTR:
      case mod_core.SCAN_WT_CMD:
        var type=cmd_dots_table[doc.scanner.wordtype+':'+doc.scanner.word];
        break;
      case mod_core.SCAN_WT_TXT:
        var type=DOTSM;
        break;
      default:
        var type=DOTSO;
        break;
      }

      switch(type){
      case DOTSB:case DOTSM:
        var ht='<tex:fsym class="aghtex-binop aghtex-symb-mincho">&#x22EF;</tex:fsym>';
        break;
      case DOTSI:
        var ht='<tex:fsym class="aghtex-dotsi aghtex-symb-mincho">&#x22EF;</tex:fsym>';
        break;
      case DOTSC:
      default:
        var ht='<tex:fsym class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:fsym>';
        break;
      }

      doc.currentCtx.output.buff.push(ht);
    }],

    // marker commands for \dots
    DOTSB: ['f',function(doc,argv){}],
    DOTSI: ['f',function(doc,argv){}],
    DOTSX: ['f',function(doc,argv){}]
  });

  function DefineDotsForCommand(cmdName,dotstype){
    if(arguments.length===1){
      var defs=arguments[0];
      var keys=agh.ownkeys(defs);
      for(var i=0,iN=keys.length;i<iN;i++){
        var k=keys[i];
        DefineDotsForCommand(k,defs[k]);
      }
    }else
      cmd_dots_table['cmd:'+cmdName]=dotstype;
  }
  function DefineDotsForLetter(cmdName,dotstype){
    if(arguments.length===1){
      var defs=arguments[0];
      var keys=agh.ownkeys(defs);
      for(var i=0,iN=keys.length;i<iN;i++){
        var k=keys[i];
        DefineDotsForLetter(k,defs[k]);
      }
    }else
      cmd_dots_table['ltr:'+cmdName]=dotstype;
  }
  _Mod.DefineDotsForLetter=DefineDotsForLetter;
  _Mod.DefineDotsForCommand=DefineDotsForCommand;

  DefineDotsForCommand({DOTSB:DOTSB,DOTSI:DOTSI,DOTSX:DOTSO});

  DefineDotsForCommand({
    sum:DOTSB,prod:DOTSB,coprod:DOTSB,
    bigcap:DOTSB,bigcup:DOTSB,bigvee:DOTSB,bigwedge:DOTSB,
    bigodot:DOTSB,bigoplus:DOTSB,bigotimes:DOTSB,biguplus:DOTSB,
    bigsqcup:DOTSB,

    implies:DOTSB,impliedby:DOTSB,And:DOTSB,

    longrightarrow:DOTSB,Longrightarrow:DOTSB,longleftarrow:DOTSB,Longleftarrow:DOTSB,
    longleftrightarrow:DOTSB,Longleftrightarrow:DOTSB,
    mapsto:DOTSB,longmapsto:DOTSB,hookrightarrow:DOTSB,hookleftarrow:DOTSB,
    iff:DOTSB,doteq:DOTSB,

    'int':DOTSI,oint:DOTSI,
    iint:DOTSI,iiint:DOTSI,iiiint:DOTSI,idotsint:DOTSI,

    '{':DOTSM,bigl:DOTSM,Bigl:DOTSM,biggl:DOTSM,Biggl:DOTSM
  });

  DefineDotsForCommand({
    dotsc:DOTSC,dotsb:DOTSB,dotsm:DOTSM,dotsi:DOTSI,dotso:DOTSO,
    ldots:DOTSC,cdots:DOTSB
  });
  DefineDotsForLetter({
    '+':DOTSB,'-':DOTSB,'/':DOTSB,'*':DOTSB,
    '=':DOTSB,'>':DOTSB,'<':DOTSB,

    '.':DOTSC,',':DOTSC,':':DOTSC,';':DOTSC,

    '[':DOTSM,'(':DOTSM
  });

  //---------------------------------------------------------------------------

  _Ctx.DefineCommand({
    iff      : ['s>mode.math', @'\;\Longleftrightarrow\;'],
    implies  : ['s>mode.math', @'\;\Longrightarrow\;'],
    impliedby: ['s>mode.math', @'\;\Longleftarrow\;'],
    And      : ['s@'         , '<tex:fsym class="aghtex-symb-roman">&amp;</tex:fsym>'],

    overset  : ["f;#>1#>2",function(doc,argv){
      var buff=doc.currentCtx.output.buff;
      mod_math.OutputOverbrace(buff,argv[2],false,argv[1]);
    }],
    underset : ["f;#>1#>2",function(doc,argv){
      var buff=doc.currentCtx.output.buff;
      mod_math.OutputUnderbrace(buff,argv[2],false,argv[1]);
    }],

    // \overleftrightarrow
    // \underrightarrow
    // \underleftarrow
    // \underleftrightarrow
    overleftrightarrow : mod_math.CreateCommandOverStretch("stretch_lrarr.png","overleftrightarrow"),
    underrightarrow    : mod_math.CreateCommandUnderStretch("stretch_rarr.png","underrightarrow"),
    underleftarrow     : mod_math.CreateCommandUnderStretch("stretch_larr.png","underleftarrow"),
    underleftrightarrow: mod_math.CreateCommandUnderStretch("stretch_lrarr.png","underleftrightarrow"),

    // \dddot, \dddot
    dddot : mod_math.CreateAccentCommand('vec','<tex:fsym class="aghtex-syma-mincho">&#x22EF;</tex:fsym>',true), // combining = &#x20DB;
    ddddot: mod_math.CreateAccentCommand('vec','<tex:fsym class="aghtex-syma-mincho">&#x2509;</tex:fsym>',true)  // combining = &#x20DC;
  });

  // TODO: command s:mode.math\align
  _Ctx.DefineEnvironment({
    // TODO: environment s:mode.math\split (上で簡単な実装があるが…)

    aligned  : mod_array["envdef:aligned"],
    alignedat: mod_array["envdef:alignedat"],
    gathered : mod_array["envdef:gathered"],

    // matrix, pmatrix については、
    //   元々存在したコマンド \matrix \pmatrix の動作を上書きする。
    matrix : mod_array["envdef:matrix"],
    pmatrix: mod_array["envdef:pmatrix"],
    bmatrix: mod_array["envdef:bmatrix"],
    Bmatrix: mod_array["envdef:Bmatrix"],
    vmatrix: mod_array["envdef:vmatrix"],
    Vmatrix: mod_array["envdef:Vmatrix"]
  });

  // TODO: command s:mode.math\bordermatrix (cmd 上書き)

  // TODO: command s:mode.math\tag
  // TODO: command s:mode.math\tag*
  // TODO: command s:mode.math\notag
  // TODO: command f\raisetag(#1)

  _Ctx.DefineCommand({
    lvert: ['s@','<tex:fsym class="aghtex-symb-mincho">&#x007c;</tex:fsym>'], // u007c "|",  u2223
    lVert: ['s@','<tex:fsym class="aghtex-symb-mincho">&#x2225;</tex:fsym>'], // u2225 "∥", u???? (‖)
    rvert: ['s@','<tex:fsym class="aghtex-symb-mincho">&#x007c;</tex:fsym>'],
    rVert: ['s@','<tex:fsym class="aghtex-symb-mincho">&#x2225;</tex:fsym>'],

    // \DeclareMathOperator 2014-03-05
    operatornamewithlimits:['s;#1',@'{\mathrm{#1}}']
  });
}
context "pkg:amsmath/global" new(){
  _Ctx.DefineCommand({
    // command s:mode.math\eqref 2014-03-05
    eqref: ['s;#1','\textup{(\ref{#1})}'],

    // command \DeclareMathOperator 2014-03-05
    "DeclareMathOperator*": ['s;#1#2',@'\def#1{\mathop{\mathrm{#2}}}'],
    "DeclareMathOperator" : ['s;#1#2',@'\def#1{{\mathrm{#2}}}']
  });
}
ns.Document.Packages["amsmath"]=function(doc,opt,pkgName){
  doc.context_cast("mode.para").OverwriteContext(doc.context_cast("pkg:amsmath/mode.para"));
  doc.context_cast("mode.math").AddBaseContext(doc.context_cast("pkg:amsmath/mode.math"));
  doc.context_cast("global").OverwriteContext(doc.context_cast("pkg:amsmath/global"));
};
//******************************************************************************
