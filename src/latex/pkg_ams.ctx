// -*- mode:js;coding:utf-8 -*-

// Package
//   \usepackage{latexsym}
//   \usepackage{amssymb}
//   \usepackage{amsmath}
// ChangeLog
//   2013-09-02, KM
//     * documentclass.ctx から分離・作成
// References
//
// 公開

/** pkg_ams.ctx
 *
 *  @section 公開オブジェクト
 *    ※以下 pkg_ams = ns.Modules["pkg:ams"] とする。
 *
 *    @fn pkg_ams.DefineDotsForCommand(cmdName,dotsType)
 *    @fn pkg_ams.DefineDotsForCommand({cmdName:dotsType})
 *    @fn pkg_ams.DefineDotsForLetter(letter,dotsType)
 *    @fn pkg_ams.DefineDotsForLetter({letter:dotsType})
 */

var mod_core = ns.Modules["core"];
var mod_base = ns.Modules["mod:base"];
var mod_array = ns.Modules["mod:array"];
var mod_math = ns.Modules["mod:math"];
var _Mod = ns.Modules["pkg:ams"] = {};

agh.memcpy(mod_core.ErrorMessages, {
  'pkg:ams.cmd:cfrac.InvalidAlignment': [
    "\\cfrac[alignment]",
    "The alignment '{align}' is unrecognized. Specify one of l, c, r."],
  'pkg:ams.pkg:amsmath.ObsoleteName': [
    "old name: {pkgName}", "The package name '{pkgName}' is obsoleted. Please use 'amsmath'."]
});

//******************************************************************************
//  \usepackage{latexsym}
//==============================================================================
context "pkg:latexsym/mode.math" new() {
  _Ctx.DefineCommand({
    lhd     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22B2;</tex:f>'],
    rhd     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22B3;</tex:f>'],
    unlhd   : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22B4;</tex:f>'],
    unrhd   : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22B5;</tex:f>'],
    mho     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2127;</tex:f>'],
    leadsto : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21DD;</tex:f>'],
    Join    : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x22c8;</tex:f>'],
    Box     : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">□</tex:f>'],
    sqsubset: ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x228f;</tex:f>'],
    sqsupset: ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2290;</tex:f>'],
    Diamond : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">◇</tex:f>'],

    // \iint \iiint \iiiint \idotsint
    iint    : ['f', function(doc, cmdName) { mod_math["cmd:int"](doc, '&#x222C;'); }],
    iiint   : ['f', function(doc, cmdName) { mod_math["cmd:int"](doc, '&#x222D;'); }],
    iiiint  : ['f', function(doc, cmdName) { mod_math["cmd:int"](doc, '&#x2A0C;'); }],
    idotsint: ['f', function(doc, cmdName) { mod_math["cmd:int"](doc, '&#x222B;<tex:f class="aghtex-dotsi">&#x22EF;</tex:f>&#x222B;'); }],

    varlimsup : ['s', @'\mathop\overline\mathrm{lim}'],
    varliminf : ['s', @'\mathop\underline\mathrm{lim}'],
    varinjlim : ['s', @'\mathop\underrightarrow\mathrm{lim}'],
    varprojlim: ['s', @'\mathop\underleftarrow\mathrm{lim}']
  });
}
ns.Document.Packages["latexsym"] = function(doc,opt,pkgName) {
  doc.context_cast("mode.math").AddBaseContext(doc.context_cast("pkg:latexsym/mode.math"));
};
//******************************************************************************
//  \usepackage{amssymb}
//==============================================================================
context "pkg:amssymb/mode.math" new() {
  _Ctx.DefineCommand({
    mathbb             : ['s@;#>1', (
      // Sf/Cr: text-stroke
      agh.browser.vSf ?
        '<tex:i class="aghtex-mathbb-stroke-sf">#1</tex:i>' :
      agh.browser.vCr ?
        '<tex:i class="aghtex-mathbb-stroke">#1</tex:i>' :
      // Cr/Op/Fx: text-shadow
      agh.browser.vOp || agh.browser.vFx >= 3.5 || agh.browser.vIE >= 10.0 ?
        '<tex:i class="aghtex-mathbb-shadow">#1</tex:i>' :
      // IE: filter:glow
      agh.browser.vIE ? '<tex:i class="aghtex-mathbb-glow">#1</tex:i>':
      // Old versions: multiple overlays
      '<tex:i class="aghtex-mathbb-old">' +
        '<tex:i class="aghtex-mathbb-a">#1</tex:i>' +
        '<tex:i class="aghtex-mathbb-b">#1</tex:i>' +
        '<tex:i class="aghtex-mathbb-c">#1</tex:i>' +
        '<tex:i class="aghtex-mathbb-d">#1</tex:i>' +
        '<tex:i class="aghtex-mathbb-e">#1</tex:i>#1</tex:i>'
    )],
    mathfrak           : ['s@;#>1', '<tex:f class="aghtex-mathfrak">#1</tex:f>'],

    lessdot            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋖</tex:f>'],
    gtrdot             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋗</tex:f>'],
    doteqdot           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≑</tex:f>'],
    leqslant           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a7d;</tex:f>'],
    geqslant           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a7e;</tex:f>'],
    risingdotseq       : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≓</tex:f>'],
    eqslantless        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a95;</tex:f>'],
    eqslantgtr         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a96;</tex:f>'],
    fallingdotseq      : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≒</tex:f>'],
    leqq               : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≦</tex:f>'],
    geqq               : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≧</tex:f>'],
    eqcirc             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≖</tex:f>'],
    lll                : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋘</tex:f>'],
    ggg                : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋙</tex:f>'],
    circeq             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≗</tex:f>'],
    lesssim            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≲</tex:f>'],
    gtrsim             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≳</tex:f>'],
    triangleq          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≜</tex:f>'],
    lessapprox         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a85;</tex:f>'],
    gtrapprox          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a86;</tex:f>'],
    bumpeq             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≏</tex:f>'],
    lessgtr            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≶</tex:f>'],
    gtrless            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≷</tex:f>'],
    Bumpeq             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≎</tex:f>'],
    lesseqgtr          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋚</tex:f>'],
    gtreqless          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋛</tex:f>'],
    thicksim           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">∼</tex:f>'],
    lesseqqgtr         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a8b;</tex:f>'],
    gtreqqless         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a8c;</tex:f>'],
    thickapprox        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≈</tex:f>'],
    preccurlyeq        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≼</tex:f>'],
    succcurlyeq        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≽</tex:f>'],
    approxeq           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≊</tex:f>'],
    curlyeqprec        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋞</tex:f>'],
    curlyeqsucc        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋟</tex:f>'],
    backsim            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">∽</tex:f>'],
    precsim            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≾</tex:f>'],
    succsim            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≿</tex:f>'],
    backsimeq          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋍</tex:f>'],
    precapprox         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2ab7;</tex:f>'],
    succapprox         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2ab8;</tex:f>'],
    vDash              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⊨</tex:f>'],
    subseteqq          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2ac5;</tex:f>'],
    supseteqq          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2ac6;</tex:f>'],
    Vdash              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⊩</tex:f>'],
    Subset             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋐</tex:f>'],
    Supset             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋑</tex:f>'],
    Vvdash             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⊪</tex:f>'],
    sqsubset           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⊏</tex:f>'],
    sqsupset           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⊐</tex:f>'],
    backepsilon        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x03f6;</tex:f>'],
    therefore          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">∴</tex:f>'],
    because            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">∵</tex:f>'],
    varpropto          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">∝</tex:f>'],
    shortmid           : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2223;</tex:f>'],
    shortparallel      : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2225;</tex:f>'],
    between            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">≬</tex:f>'],
    smallsmile         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⌣</tex:f>'], // ■TODO:small version
    smallfrown         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⌢</tex:f>'], // ■TODO:small version
    pitchfork          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⋔</tex:f>'],
    vartriangleleft    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⊲</tex:f>'],
    vartriangleright   : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⊳</tex:f>'],
    blacktriangleleft  : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">◄</tex:f>'],
    blacktriangleright : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">►</tex:f>'],
    trianglelefteq     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⊴</tex:f>'],
    trianglerighteq    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">⊵</tex:f>'],

    nless              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x226e;</tex:f>'],
    ngtr               : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x226f;</tex:f>'],
    varsubsetneqq      : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2ac8;</tex:f>'],
    varsupsetneqq      : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2ac9;</tex:f>'],
    lneq               : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a87;</tex:f>'],
    gneq               : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a88;</tex:f>'],
    nleq               : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2270;</tex:f>'],
    ngeq               : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2271;</tex:f>'],
    nsubseteqq         : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2288;</tex:f>'],
    nsupseteqq         : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2289;</tex:f>'],
    nleqslant          : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2274;</tex:f>'],
    ngeqslant          : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2275;</tex:f>'],
    lneqq              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2268;</tex:f>'],
    gneqq              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2269;</tex:f>'],
    nmid               : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2224;</tex:f>'],
    nparallel          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2226;</tex:f>'],
    lvertneqq          : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2268;</tex:f>'],
    gvertneqq          : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2269;</tex:f>'],
    nleqq              : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2270;</tex:f>'],
    ngeqq              : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2271;</tex:f>'],
    nshortmid          : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2224;</tex:f>'],
    nshortparallel     : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x2226;</tex:f>'],
    lnsim              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22e6;</tex:f>'],
    gnsim              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22e7;</tex:f>'],
    lnapprox           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a89;</tex:f>'],
    gnapprox           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2a8a;</tex:f>'],
    nsim               : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2241;</tex:f>'],
    ncong              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2247;</tex:f>'],
    nprec              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2280;</tex:f>'],
    nsucc              : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2281;</tex:f>'],
    npreceq            : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x22e0;</tex:f>'],
    nsucceq            : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x22e1;</tex:f>'],
    nvdash             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22ac;</tex:f>'],
    nvDash             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22ad;</tex:f>'],
    precneqq           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2ab5;</tex:f>'],
    succneqq           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2ab6;</tex:f>'],
    precnsim           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22e8;</tex:f>'],
    succnsim           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22e9;</tex:f>'],
    nVdash             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22ae;</tex:f>'],
    nVDash             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22af;</tex:f>'],
    precnapprox        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2ab9;</tex:f>'],
    succnapprox        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2aba;</tex:f>'],
    subsetneq          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x228a;</tex:f>'],
    supsetneq          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x228b;</tex:f>'],
    ntriangleleft      : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22ea;</tex:f>'],
    ntriangleright     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22eb;</tex:f>'],
    varsubsetneq       : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x228a;</tex:f>'],
    varsupsetneq       : ['s@', '<tex:f class="aghtex-binop aghtex-syma-mincho">&#x228b;</tex:f>'],
    nsubseteq          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2288;</tex:f>'],
    nsupseteq          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2289;</tex:f>'],
    ntrianglelefteq    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22ec;</tex:f>'],
    ntrianglerighteq   : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22ed;</tex:f>'],
    subsetneqq         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2acb;</tex:f>'],
    supsetneqq         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2acc;</tex:f>'],
    nleftarrow         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x219a;</tex:f>'],
    nrightarrow        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x219b;</tex:f>'],
    nleftrightarrow    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21ae;</tex:f>'],
    nLeftrightarrow    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21ce;</tex:f>'],
    nLeftarrow         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21cd;</tex:f>'],
    nRightarrow        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21cf;</tex:f>'],

    dotplus            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2214;</tex:f>'],
    centerdot          : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22c5;</tex:f>'],
    intercal           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22ba;</tex:f>'],
    divideontimes      : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22c7;</tex:f>'],
    ltimes             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22c9;</tex:f>'],
    rtimes             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22ca;</tex:f>'],
    Cup                : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22d3;</tex:f>'],
    Cap                : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22d2;</tex:f>'],
    smallsetminus      : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2216;</tex:f>'],
    doublebarwedge     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x2306;</tex:f>'],
    veebar             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22bb;</tex:f>'],
    barwedge           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22bc;</tex:f>'],
    boxplus            : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x229e;</tex:f>'],
    boxminus           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x229f;</tex:f>'],
    circleddash        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x229d;</tex:f>'],
    circledcirc        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x229a;</tex:f>'],
    boxtimes           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22a0;</tex:f>'],
    boxdot             : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22a1;</tex:f>'],
    leftthreetimes     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22cb;</tex:f>'],
    rightthreetimes    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22cc;</tex:f>'],
    curlyvee           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22ce;</tex:f>'],
    curlywedge         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22cf;</tex:f>'],
    circledast         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x229b;</tex:f>'],

    dashleftarrow      : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21e0;</tex:f>'], // ■mwg_mathsymb:TODO
    dashrightarrow     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21e2;</tex:f>'], // ■mwg_mathsymb:TODO
    leftleftarrows     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21c7;</tex:f>'],
    rightrightarrows   : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21c9;</tex:f>'],
    upuparrows         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21c8;</tex:f>'],
    downdownarrows     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21ca;</tex:f>'],
    leftrightarrows    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21c6;</tex:f>'],
    rightleftarrows    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21c4;</tex:f>'],
    Lleftarrow         : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21da;</tex:f>'],
    Rrightarrow        : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21db;</tex:f>'],
    upharpoonleft      : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21bf;</tex:f>'],
    upharpoonright     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21be;</tex:f>'],
    twoheadleftarrow   : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x219e;</tex:f>'],
    twoheadrightarrow  : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21a0;</tex:f>'],
    leftarrowtail      : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21a2;</tex:f>'],
    rightarrowtail     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21a3;</tex:f>'],
    downharpoonleft    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21c3;</tex:f>'],
    downharpoonright   : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21c2;</tex:f>'],
    leftrightharpoons  : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21cb;</tex:f>'],
    rightleftharpoons  : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21cc;</tex:f>'],
    Lsh                : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21b0;</tex:f>'],
    Rsh                : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21b1;</tex:f>'],
    looparrowleft      : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21ab;</tex:f>'],
    looparrowright     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21ac;</tex:f>'],
    curvearrowleft     : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21b6;</tex:f>'],
    curvearrowright    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21b7;</tex:f>'],
    circlearrowleft    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21ba;</tex:f>'],
    circlearrowright   : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21bb;</tex:f>'],
    leftrightsquigarrow: ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21ad;</tex:f>'],
    multimap           : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22b8;</tex:f>'],
    rightsquigarrow    : ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x21dd;</tex:f>'],

    ulcorner           : ['s@', '<tex:f class="aghtex-symb-mincho">&#x250c;</tex:f>'],
    urcorner           : ['s@', '<tex:f class="aghtex-symb-mincho">&#x2510;</tex:f>'],
    llcorner           : ['s@', '<tex:f class="aghtex-symb-mincho">&#x2514;</tex:f>'],
    lrcorner           : ['s@', '<tex:f class="aghtex-symb-mincho">&#x2518;</tex:f>'],

    Box                : ['s@', '<tex:f class="aghtex-syma-mincho">□</tex:f>'],
    Diamond            : ['s@', '<tex:f class="aghtex-syma-mincho">&#x25c7;</tex:f>'],
    hbar               : ['s@', '<tex:f class="aghtex-symb-roman">ħ</tex:f>'],
    hslash             : ['s@', '<tex:f class="aghtex-symb-mincho">ℏ</tex:f>'],
    Bbbk               : ['s@', '<tex:f class="aghtex-symb-mincho">k</tex:f>'],
    square             : ['s@', '<tex:f class="aghtex-symb-mincho">□</tex:f>'],
    blacksquare        : ['s@', '<tex:f class="aghtex-symb-mincho">■</tex:f>'],
    circledS           : ['s@', '<tex:f class="aghtex-symb-mincho">Ⓢ</tex:f>'],
    vartriangle        : ['s@', '<tex:f class="aghtex-symb-mincho">△</tex:f>'],
    blacktriangle      : ['s@', '<tex:f class="aghtex-symb-mincho">▲</tex:f>'],
    complement         : ['s@', '<tex:f class="aghtex-symb-mincho">∁</tex:f>'],
    triangledown       : ['s@', '<tex:f class="aghtex-symb-mincho">▽</tex:f>'],
    blacktriangledown  : ['s@', '<tex:f class="aghtex-symb-mincho">▼</tex:f>'],
    Game               : ['s@', '<tex:f class="aghtex-symb-mincho">&#x2141;</tex:f>'],
    lozenge            : ['s@', '<tex:f class="aghtex-symb-mincho">◊</tex:f>'],
    blacklozenge       : ['s@', '<tex:f class="aghtex-symb-mincho">&#x29eb;</tex:f>'],
    bigstar            : ['s@', '<tex:f class="aghtex-symb-mincho">★</tex:f>'],
    angle              : ['s@', '<tex:f class="aghtex-symb-mincho">∠</tex:f>'],
    measuredangle      : ['s@', '<tex:f class="aghtex-symb-mincho">∡</tex:f>'],
    sphericalangle     : ['s@', '<tex:f class="aghtex-symb-mincho">∢</tex:f>'],
    diagup             : ['s@', '<tex:f class="aghtex-symb-mincho">╱</tex:f>'],
    diagdown           : ['s@', '<tex:f class="aghtex-symb-mincho">╲</tex:f>'],
    backprime          : ['s@', '<tex:f class="aghtex-symb-mincho">‵</tex:f>'],
    nexists            : ['s@', '<tex:f class="aghtex-symb-mincho">∄</tex:f>'],
    Finv               : ['s@', '<tex:f class="aghtex-symb-mincho">Ⅎ</tex:f>'],
    varnothing         : ['s@', '<tex:f class="aghtex-symb-mincho">∅</tex:f>'],
    eth                : ['s@', '<tex:f class="aghtex-symb-mincho">ð</tex:f>'],
    mho                : ['s@', '<tex:f class="aghtex-symb-mincho">℧</tex:f>'],

    digamma            : ['s@', '<tex:f class="aghtex-symb-mincho">&#x03dc;</tex:f>'],
    beth               : ['s@', '<tex:f class="aghtex-symb-mincho">&#x2136;</tex:f>'],
    daleth             : ['s@', '<tex:f class="aghtex-symb-mincho">&#x2138;</tex:f>'],
    gimel              : ['s@', '<tex:f class="aghtex-symb-mincho">&#x2137;</tex:f>'],

    // integrals
    iint               : ['f', function(doc, cmdName) { mod_math["cmd:int"](doc, '&#x222C;'); }],
    iiint              : ['f', function(doc, cmdName) { mod_math["cmd:int"](doc, '&#x222D;'); }],
    iiiint             : ['f', function(doc, cmdName) { mod_math["cmd:int"](doc, '&#x2A0C;'); }]
  });
}
ns.Document.Packages["amssymb"] = function(doc, opt, pkgName) {
  doc.context_cast("mode.math").AddBaseContext(doc.context_cast("pkg:amssymb/mode.math"));
};
//******************************************************************************
//  \usepackage{amsmath}
//    ftp://ftp.ams.org/pub/tex/doc/amsmath/amsldoc.pdf
//==============================================================================
context "pkg:amsmath/mode.para" new() {
  environment s@:mode.math\equation*()  '<tex:math class="aghtex-displaymath">#0</tex:math>';

  _Ctx.DefineCommand({
    // \AmS
    "AmS": ['s@', '<tex:AmS>A<span>M</span>S</tex:AmS>'],

    // CHK: 以下は paragraph mode でも使えるのか?
    dots : ['s@', '<tex:f class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:f>'],
    ldots: ['s@', '<tex:f class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:f>']
  });

  _Ctx.DefineEnvironment({
    "align*"   : mod_array["envdef:align*"],
    "align"    : mod_array["envdef:align"],
    "alignat*" : mod_array["envdef:alignat*"],
    "alignat"  : mod_array["envdef:alignat"],
    "flalign*" : mod_array["envdef:flalign*"],
    "flalign"  : mod_array["envdef:flalign"],
    "gather*"  : mod_array["envdef:gather*"],
    "gather"   : mod_array["envdef:gather"],
    "multline*": mod_array["envdef:multline*"],
    "multline" : mod_array["envdef:multline"]
  });

  _Ctx.handlerC['!'] = ns.ContextFactory.GetInstance("mode.para").handlerC['negthinspace'];
}
context "pkg:amsmath/mode.math" new() {

  _Ctx.DefineCommand({
    boldsymbol: ['s@;#>1', '<tex:f class="aghtex-mathbm">#1</tex:f>'],
    substack  : ['s;#1', @"\begin{array}{c}#1\end{array}"],

    // 色々なスタイルの分数
    dfrac     : ['f;#>1#>2', mod_math["cmd:frac"]],
    tfrac     : ['f;#>1#>2', mod_math["cmd:frac"]]
  });

  //--------------------------------------------------------------------------
  //  \cfrac
  //--------------------------------------------------------------------------
  var cfrac_html = null;
  if (agh.browser.vIE) {
    cfrac_html = (
      '<' + mod_core.TAG_TABLE + ' cellspacing="0" class="aghtex-frac-ie6-table"><' + mod_core.TAG_TBODY + '>'
        + '<' + mod_core.TAG_TR + '><' + mod_core.TAG_TD + ' class="aghtex-frac-ie6-num" style="text-align:$!important;">$</' + mod_core.TAG_TD + '></' + mod_core.TAG_TR + '>'
        + '<' + mod_core.TAG_TR + '><' + mod_core.TAG_TD + ' class="aghtex-frac-ie6-den" style="text-align:$!important;">$</' + mod_core.TAG_TD + '></' + mod_core.TAG_TR + '>'
        + '</' + mod_core.TAG_TBODY + '></' + mod_core.TAG_TABLE + '>'
    ).split(/\$/g);
  } else {
    cfrac_html = (
      '<tex:frac><tex:num style="text-align:$!important;">$</tex:num>'
      + '<tex:den style="text-align:$!important;">$</tex:den></tex:frac>'
    ).split(/\$/g);
  }
  _Ctx.DefineCommand({cfrac: ['f;#[c]!1#>2#>3', function(doc, argv) {
    var output = doc.currentCtx.output;
    var align =
        argv[1] == "r" ? "right":
        argv[1] == "l" ? "left":
        argv[1] == "c" ? "center":
        "";
    if (align == "") {
      output.error(
        'pkg:ams.cmd:cfrac.InvalidAlignment',
        {align: argv[1]}, '\\cfrac (pkg:ams)');
      align = "center";
    }
    output.buff.push(
      cfrac_html[0],align,
      cfrac_html[1],argv[2],
      cfrac_html[2],align,
      cfrac_html[3],argv[3],
      cfrac_html[4]);
  }]});

  environment s:mode.math\cases() @"\left\{\begin{array}{lc}#0\end{array}\right.";
  environment s:mode.math\split() @"\begin{array}{r@{}l}#0\end{array}";

  // \AmS
  _Ctx.DefineCommand({AmS: ['s@', '<tex:AmS>A<span>M</span>S</tex:AmS>']});

  // \binom, \tbinom, \dbinom, \genfrac
  function cmd_genfrac(doc, left, right, barWidth, style, htNumerator, htDenominator) {
    // TODO: style=0: displaystyle, 1: textstyle, 2: scriptstyle, 3: scriptscriptstyle, other: normal

    var output = doc.currentCtx.output;
    var buff = output.buff;
    buff.push('<', mod_core.TAG_TABLE, ' cellspacing="0" class="aghtex-inline-table"><', mod_core.TAG_TBODY, '><', mod_core.TAG_TR, ' class="aghtex-cmdleft-row">');
    if (left)
      mod_base.OutputStretchBracketTd(output, left, 2);

    var hasBar = barWidth && barWidth;
    buff.push('<', mod_core.TAG_TD, ' align="center" class="', hasBar ? 'aghtex-genfrac-numerator' : 'aghtex-genfrac-center', '"');
    if (hasBar && barWidth !== '1px')
      buff.push(' style="border-bottom-width:', barWidth, ';"');
    buff.push('>', htNumerator, '</', mod_core.TAG_TD, '>');

    if (right)
      mod_base.OutputStretchBracketTd(output, right, 2);
    buff.push('</', mod_core.TAG_TR, '><', mod_core.TAG_TR, '><', mod_core.TAG_TD, ' align="center" class="aghtex-genfrac-center">', htDenominator, '</', mod_core.TAG_TD, '></', mod_core.TAG_TR, '>');
    buff.push('</', mod_core.TAG_TBODY, '></', mod_core.TAG_TABLE, '>');
  }

  _Ctx.DefineCommand({
    binom  : ['f;#>1#>2', function(doc, argv) { cmd_genfrac(doc, '(', ')', null, null, argv[1], argv[2]); }],
    tbinom : ['f;#>1#>2', function(doc, argv) { cmd_genfrac(doc, '(', ')', null, 1, argv[1], argv[2]); }],
    dbinom : ['f;#>1#>2', function(doc, argv) { cmd_genfrac(doc, '(', ')', null, 0, argv[1], argv[2]); }],
    genfrac: ['f;#>1#>2#>3#>4#>5#>6', function(doc, argv) { cmd_genfrac(doc, argv[1], argv[2], argv[3], argv[4], argv[5], argv[6]); }]
  });

  // TODO: command s:mode.math\uproot
  // TODO: command s:mode.math\leftroot

  //---------------------------------------------------------------------------
  // dots

  var DOTSO = 0; // comma
  var DOTSC = 1; // comma
  var DOTSB = 2; // binary
  var DOTSM = 3; // multiply
  var DOTSI = 4; // int
  var cmd_dots_table = {};

  _Ctx.DefineCommand({
    dotsc: ['s@', '<tex:f class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:f>' ], // dots comma,    下付三点
    dotsb: ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22EF;</tex:f>'], // dots binary,   中央三点
    dotsm: ['s@', '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22EF;</tex:f>'], // dots multiply, 中央三点
    dotso: ['s@', '<tex:f class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:f>' ], // dots other,    下付三点
    dotsi: ['f', function(doc, argv) {
      // dots integral, 中央三点
      if (!mod_math.GetMathStyle(doc))
        doc.currentCtx.output.buff.push('<tex:f class="aghtex-dotsi">&#x22EF;</tex:f>');
      else
        doc.currentCtx.output.buff.push('<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22EF;</tex:f>');
    }],
    dots : ['f', function(doc, argv) {
      doc.skipSpaceAndComment();

      switch (doc.scanner.wordtype) {
      case mod_core.SCAN_WT_LTR:
      case mod_core.SCAN_WT_CMD:
        var type = cmd_dots_table[doc.scanner.wordtype + ':' + doc.scanner.word];
        break;
      case mod_core.SCAN_WT_TXT:
        var type = DOTSM;
        break;
      default:
        var type = DOTSO;
        break;
      }

      switch (type) {
      case DOTSB: case DOTSM:
        var ht = '<tex:f class="aghtex-binop aghtex-symb-mincho">&#x22EF;</tex:f>';
        break;
      case DOTSI:
        var ht = '<tex:f class="aghtex-dotsi aghtex-symb-mincho">&#x22EF;</tex:f>';
        break;
      case DOTSC:
      default:
        var ht = '<tex:f class="aghtex-binop aghtex-symb-roman">&#x2026;</tex:f>';
        break;
      }

      doc.currentCtx.output.buff.push(ht);
    }],

    // marker commands for \dots
    DOTSB: mod_base["cmd:relax"],
    DOTSI: mod_base["cmd:relax"],
    DOTSX: mod_base["cmd:relax"]
  });

  function DefineDotsForCommand(cmdName, dotstype) {
    if (arguments.length === 1) {
      var defs = arguments[0];
      var keys = agh.ownkeys(defs);
      for (var i = 0, iN = keys.length; i < iN; i++) {
        var k = keys[i];
        DefineDotsForCommand(k, defs[k]);
      }
    } else
      cmd_dots_table['cmd:' + cmdName] = dotstype;
  }
  function DefineDotsForLetter(cmdName, dotstype) {
    if (arguments.length === 1) {
      var defs = arguments[0];
      var keys = agh.ownkeys(defs);
      for (var i = 0, iN = keys.length; i < iN; i++) {
        var k = keys[i];
        DefineDotsForLetter(k, defs[k]);
      }
    } else
      cmd_dots_table['ltr:' + cmdName] = dotstype;
  }
  _Mod.DefineDotsForLetter = DefineDotsForLetter;
  _Mod.DefineDotsForCommand = DefineDotsForCommand;

  DefineDotsForCommand({DOTSB: DOTSB, DOTSI: DOTSI, DOTSX: DOTSO});

  DefineDotsForCommand({
    sum: DOTSB, prod: DOTSB, coprod: DOTSB,
    bigcap: DOTSB, bigcup: DOTSB, bigvee: DOTSB, bigwedge: DOTSB,
    bigodot: DOTSB, bigoplus: DOTSB, bigotimes: DOTSB, biguplus: DOTSB,
    bigsqcup: DOTSB,

    implies: DOTSB,impliedby: DOTSB,And: DOTSB,

    longrightarrow: DOTSB, Longrightarrow: DOTSB, longleftarrow: DOTSB, Longleftarrow: DOTSB,
    longleftrightarrow: DOTSB, Longleftrightarrow: DOTSB,
    mapsto: DOTSB, longmapsto: DOTSB, hookrightarrow: DOTSB, hookleftarrow: DOTSB,
    iff: DOTSB, doteq: DOTSB,

    'int': DOTSI, oint: DOTSI,
    iint: DOTSI, iiint: DOTSI, iiiint: DOTSI, idotsint: DOTSI,

    '{': DOTSM, bigl: DOTSM, Bigl: DOTSM, biggl: DOTSM, Biggl: DOTSM
  });

  DefineDotsForCommand({
    dotsc: DOTSC, dotsb: DOTSB, dotsm: DOTSM, dotsi: DOTSI, dotso: DOTSO,
    ldots: DOTSC, cdots: DOTSB
  });
  DefineDotsForLetter({
    '+': DOTSB, '-': DOTSB, '/': DOTSB, '*': DOTSB,
    '=': DOTSB, '>': DOTSB, '<': DOTSB,

    '.': DOTSC, ',': DOTSC, ':': DOTSC, ';': DOTSC,

    '[': DOTSM, '(': DOTSM
  });

  //---------------------------------------------------------------------------

  _Ctx.DefineCommand({
    iff      : ['s>mode.math', @'\;\Longleftrightarrow\;'],
    implies  : ['s>mode.math', @'\;\Longrightarrow\;'],
    impliedby: ['s>mode.math', @'\;\Longleftarrow\;'],
    And      : ['s@'         , '<tex:f class="aghtex-symb-roman">&amp;</tex:f>'],

    overset  : ["f;#>1#>2", function(doc, argv) {
      var buff = doc.currentCtx.output.buff;
      mod_math.OutputOverbrace(buff, argv[2], false, argv[1]);
    }],
    underset : ["f;#>1#>2", function(doc, argv) {
      var buff = doc.currentCtx.output.buff;
      mod_math.OutputUnderbrace(buff, argv[2], false, argv[1]);
    }],

    // \overleftrightarrow
    // \underrightarrow
    // \underleftarrow
    // \underleftrightarrow
    overleftrightarrow : mod_math.CreateCommandOverStretch({commandName: "overleftrightarrow", imageSrc: "stretch_lrarr.png", svg: mod_math["svg:stretch_lrarr"]}),
    underrightarrow    : mod_math.CreateCommandUnderStretch({commandName: "underrightarrow", imageSrc: "stretch_rarr.png", svg: mod_math["svg:stretch_rarr"]}),
    underleftarrow     : mod_math.CreateCommandUnderStretch({commandName: "underleftarrow", imageSrc: "stretch_larr.png", svg: mod_math["svg:stretch_larr"]}),
    underleftrightarrow: mod_math.CreateCommandUnderStretch({commandName: "underleftrightarrow", imageSrc: "stretch_lrarr.png", svg: mod_math["svg:stretch_lrarr"]}),

    // \dddot,  \dddot
    dddot : mod_math.CreateAccentCommand('vec', '<tex:f class="aghtex-syma-mincho">&#x22EF;</tex:f>', true), // combining = &#x20DB;
    ddddot: mod_math.CreateAccentCommand('vec', '<tex:f class="aghtex-syma-mincho">&#x2509;</tex:f>', true)  // combining = &#x20DC;
  });

  // TODO: command s:mode.math\align
  _Ctx.DefineEnvironment({
    // TODO: environment s:mode.math\split (上で簡単な実装があるが…)

    aligned  : mod_array["envdef:aligned"],
    alignedat: mod_array["envdef:alignedat"],
    gathered : mod_array["envdef:gathered"],

    // matrix, pmatrix については、
    //   元々存在したコマンド \matrix \pmatrix の動作を上書きする。
    matrix : mod_array["envdef:matrix"],
    pmatrix: mod_array["envdef:pmatrix"],
    bmatrix: mod_array["envdef:bmatrix"],
    Bmatrix: mod_array["envdef:Bmatrix"],
    vmatrix: mod_array["envdef:vmatrix"],
    Vmatrix: mod_array["envdef:Vmatrix"]
  });

  // TODO: command s:mode.math\bordermatrix (cmd 上書き)

  // TODO: command s:mode.math\tag
  // TODO: command s:mode.math\tag*
  // TODO: command s:mode.math\notag
  // TODO: command f\raisetag(#1)

  _Ctx.DefineCommand({
    lvert: ['s@', '<tex:f class="aghtex-symb-mincho">&#x007c;</tex:f>'], // u007c "|",  u2223
    lVert: ['s@', '<tex:f class="aghtex-symb-mincho">&#x2225;</tex:f>'], // u2225 "∥", u???? (‖)
    rvert: ['s@', '<tex:f class="aghtex-symb-mincho">&#x007c;</tex:f>'],
    rVert: ['s@', '<tex:f class="aghtex-symb-mincho">&#x2225;</tex:f>'],

    // 2014-03-05 \operatornamewithlimits
    // 2018-01-30 \operatorname, \operatorname*
    'operatorname*'       : ['s;#1', @'\mathop{\textrm{#1}}'],
    operatornamewithlimits: ['s;#1', @'\mathop{\textrm{#1}}'],
    operatorname : ["f;#mode.para>1", function(doc, argv) {
      var buff = doc.currentCtx.output.buff;
      var sbsp = doc.GetSubSup();
      buff.push('<tex:i class="aghtex-mathop">', argv[1]);
      mod_math.OutputSupSubScripts(doc, sbsp.sup, sbsp.sub);
      buff.push('</tex:i>');
    }]
  });
}
context "pkg:amsmath/global" new() {
  _Ctx.DefineCommand({
    // command s:mode.math\eqref 2014-03-05
    eqref: ['s;#1', @'\textup{(\ref{#1})}'],

    // command \DeclareMathOperator 2014-03-05
    "DeclareMathOperator*": ['s;#1#2', @'\def#1{\mathop{\mathrm{#2}}}'],
    "DeclareMathOperator" : ['s;#1#2', @'\def#1{{\mathrm{#2}}}']
  });
}
ns.Document.Packages["amsmath"] = function(doc, opt, pkgName) {
  if (pkgName === "amstex") {
    doc.currentCtx.output.error(
      'pkg:ams.pkg:amsmath.ObsoleteName',
      {pkgName: pkgName}, '\\usepackage{' + pkgName + '} (pkg:ams)');
  }
  doc.context_cast("mode.para").OverwriteContext(doc.context_cast("pkg:amsmath/mode.para"));
  doc.context_cast("mode.math").AddBaseContext(doc.context_cast("pkg:amsmath/mode.math"));
  doc.context_cast("global").OverwriteContext(doc.context_cast("pkg:amsmath/global"));
  doc.context_cast("env.array").AddCommandHandler("hdotsfor", mod_array["cmd:hdotsfor"]);
};
ns.Document.Packages["amstex"] = ns.Document.Packages["amsmath"];
//******************************************************************************
