// -*- mode:js;coding:utf-8 -*- (日本語)

/**
 *  mod_math
 *
 *  @section 公開オブジェクト
 *    ※以下 mod_math = ns.Modules["mod:math"] とする。
 *
 *    @fn mod_math.CreateCommandOverStretch({commandName, imageSrc, svg});
 *    @fn mod_math.CreateCommandUnderStretch({commandName, imageSrc, svg});
 *    @fn mod_math.CreateCommandSummation(content);
 *    @fn mod_math.CreateAccentCommandQksB(height,htSymbol);
 *    @fn mod_math.CreateAccentCommand(type,htsymb,ismath);
 *    @fn mod_math.OutputOverbrace(buff,content,image,undertxt)
 *    @fn mod_math.OutputUnderbrace(buff,content,image,undertxt)
 *    @fn mod_math.OutputSupSubScripts(buff, sup, sub)
 */

var mod_core = ns.Modules["core"];
var mod_base = ns.Modules["mod:base"];
var mod_common = ns.Modules["mod:common"];
var _Mod = ns.Modules["mod:math"] = {};

context "mode.math" {

  //---------------------------------------------------------------
  // 数式スタイル

  _Mod.MATHSTYLE_DISPLAY = 0;
  _Mod.MATHSTYLE_TEXT    = 1;
  _Mod.MATHSTYLE_SCRIPT  = 2;
  _Mod.MATHSTYLE_SCRIPT2 = 3;
  _Mod.GetMathStyle = function mod_math_GetMathStyle(doc) {
    return doc.GetContextVariable('mathstyle');
  };

  command f\displaystyle() {
    doc.SetContextVariable("mathstyle", _Mod.MATHSTYLE_DISPLAY);
  };
  command f\textstyle() {
    doc.SetContextVariable("mathstyle", _Mod.MATHSTYLE_TEXT);
  };
  command f\scriptstyle() {
    doc.SetContextVariable("mathstyle", _Mod.MATHSTYLE_SCRIPT);

    var output = doc.currentCtx.output;
    output.buff.push('<tex:fsize class="aghtex-default"><tex:fsize class="aghtex-script">');
    output.appendPost('</tex:fsize></tex:fsize>');
  };
  command f\scriptscriptstyle() {
    doc.SetContextVariable("mathstyle", _Mod.MATHSTYLE_SCRIPT2);

    var output=doc.currentCtx.output;
    output.buff.push('<tex:fsize class="aghtex-default"><tex:fsize class="aghtex-scriptscript">');
    output.appendPost('</tex:fsize></tex:fsize>');
  };

  //---------------------------------------------------------------
  //    字体
  //---------------------------------------------------------------

  _Ctx.DefineCommand({
    bf : mod_common.CreateCommandTagFollowing('<tex:f class="aghtex-mathbf">' , '</tex:f>'),
    it : mod_common.CreateCommandTagFollowing('<tex:f class="aghtex-mathit">' , '</tex:f>'),
    rm : mod_common.CreateCommandTagFollowing('<tex:f class="aghtex-mathrm">' , '</tex:f>'),
    sf : mod_common.CreateCommandTagFollowing('<tex:f class="aghtex-mathsf">' , '</tex:f>'),
    tt : mod_common.CreateCommandTagFollowing('<tex:f class="aghtex-mathtt">' , '</tex:f>'),
    cal: mod_common.CreateCommandTagFollowing('<tex:f class="aghtex-mathcal">', '</tex:f>'),

    // - 以下は数式モードでは効果無し。
    mc          : mod_base["cmd:relax"],
    gt          : mod_base["cmd:relax"],
    normalfont  : mod_base["cmd:relax"],
    tiny        : mod_base["cmd:relax"],
    scriptsize  : mod_base["cmd:relax"],
    footnotesize: mod_base["cmd:relax"],
    small       : mod_base["cmd:relax"],
    normalsize  : mod_base["cmd:relax"],
    large       : mod_base["cmd:relax"],
    Large       : mod_base["cmd:relax"],
    LARGE       : mod_base["cmd:relax"],
    huge        : mod_base["cmd:relax"],
    Huge        : mod_base["cmd:relax"],

    // - 以下は文章モードに移行して評価
    text  : ['s@;#mode.para>1', '<tex:f class="aghtex-textrm">#1</tex:f>'], // 文章モードはデフォルトで roman で良いか?
    textrm: ['s@;#mode.para>1', '<tex:f class="aghtex-textrm">#1</tex:f>'],
    textsf: ['s@;#mode.para>1', '<tex:f class="aghtex-textsf">#1</tex:f>'],
    texttt: ['s@;#mode.para>1', '<tex:f class="aghtex-texttt">#1</tex:f>'],
    textmc: ['s@;#mode.para>1', '<tex:f class="aghtex-textrm">#1</tex:f>'],
    textgt: ['s@;#mode.para>1', '<tex:f class="aghtex-textgt">#1</tex:f>'],
    textmd: ['s@;#mode.para>1', '<tex:f class="aghtex-textmd">#1</tex:f>'],
    textbf: ['s@;#mode.para>1', '<tex:f class="aghtex-textbf">#1</tex:f>'],
    textup: ['s@;#mode.para>1', '<tex:f class="aghtex-textup">#1</tex:f>'],
    textit: ['s@;#mode.para>1', '<tex:f class="aghtex-textit">#1</tex:f>'],
    textsc: ['s@;#mode.para>1', '<tex:f class="aghtex-textsc">#1</tex:f>'],
    textsl: ['s@;#mode.para>1', '<tex:f class="aghtex-textsl">#1</tex:f>'],

    mathbf    : ['s@;#>1', '<tex:f class="aghtex-mathbf">#1</tex:f>'],
    mathit    : ['s@;#>1', '<tex:f class="aghtex-mathit">#1</tex:f>'],
    mathrm    : ['s@;#>1', '<tex:f class="aghtex-mathrm">#1</tex:f>'],
    mathsf    : ['s@;#>1', '<tex:f class="aghtex-mathsf">#1</tex:f>'],
    mathtt    : ['s@;#>1', '<tex:f class="aghtex-mathtt">#1</tex:f>'],
    mathnormal: ['s@;#>1', '<tex:f class="aghtex-mathit">#1</tex:f>'],
    mathcal   : ['s@;#>1', '<tex:f class="aghtex-mathcal">#1</tex:f>'],

  });

  // 括弧の大きさ

  var create_big_delimiter_with_supsub = function(size, lmr) {
    return ns.Command2("f", "#>1", function(doc, args) {
      var sbsp = doc.GetSubSup();

      // 上付き・下付きがある時は右側の空白は無効にする。
      if (sbsp.sup || sbsp.sub) {
        switch (lmr) {
        case 'bigr': lmr = null; break;
        case 'bigm': lmr = 'bigl'; break;
        }
      }

      var buff = doc.currentCtx.output.buff;
      if (lmr) buff.push('<tex:i class="aghtex-', lmr, '">');
      buff.push('<tex:i class="aghtex-', size, '">', args[1], '</tex:i>');
      if (lmr) buff.push('</tex:i');
      _Mod.OutputSupSubScripts(doc, sbsp.sup, sbsp.sub, size);
    });
  };

  _Ctx.DefineCommand({
    big  : create_big_delimiter_with_supsub('big1', null),
    Big  : create_big_delimiter_with_supsub('big2', null),
    bigg : create_big_delimiter_with_supsub('big3', null),
    Bigg : create_big_delimiter_with_supsub('big4', null),
    bigl : create_big_delimiter_with_supsub('big1', 'bigl'),
    Bigl : create_big_delimiter_with_supsub('big2', 'bigl'),
    biggl: create_big_delimiter_with_supsub('big3', 'bigl'),
    Biggl: create_big_delimiter_with_supsub('big4', 'bigl'),
    bigr : create_big_delimiter_with_supsub('big1', 'bigr'),
    Bigr : create_big_delimiter_with_supsub('big2', 'bigr'),
    biggr: create_big_delimiter_with_supsub('big3', 'bigr'),
    Biggr: create_big_delimiter_with_supsub('big4', 'bigr'),
    bigm : create_big_delimiter_with_supsub('big1', 'bigm'),
    Bigm : create_big_delimiter_with_supsub('big2', 'bigm'),
    biggm: create_big_delimiter_with_supsub('big3', 'bigm'),
    Biggm: create_big_delimiter_with_supsub('big4', 'bigm')
  });

  //---------------------------------------------------------------
  //    特殊文字
  //---------------------------------------------------------------

  // 空白は出力しない
  letter s@#' \b\t\v\r\n\f'() @"";

  // 調整付の通常文字
  letter s@\+() '<tex:f class="aghtex-binop aghtex-symb-gothic">＋</tex:f>';
  letter s@\-() '<tex:f class="aghtex-binop aghtex-symb-gothic">－</tex:f>';
  letter s@\=() '<tex:f class="aghtex-binop aghtex-symb-gothic">＝</tex:f>';
  letter s@\/() '<tex:f class="aghtex-binop aghtex-symb-gothic">/</tex:f>';

  // 数式フォントで再定義
  letter s@#'['  () '<tex:f class="aghtex-lbrace aghtex-symb-gothic">[</tex:f>';
  letter s@#']'  () '<tex:f class="aghtex-rbrace aghtex-symb-gothic">]</tex:f>';
  letter s@#'('  () '<tex:f class="aghtex-lbrace aghtex-symb-gothic">(</tex:f>';
  letter s@#')'  () '<tex:f class="aghtex-rbrace aghtex-symb-gothic">)</tex:f>';
  command s@\{   () '<tex:f class="aghtex-lbrace aghtex-symb-gothic">{</tex:f>';
  command s@\}   () '<tex:f class="aghtex-rbrace aghtex-symb-gothic">}</tex:f>';
  command s@\&   () '<tex:f class="aghtex-symb-gothic">&amp;</tex:f>';
  command s@\%   () '<tex:f class="aghtex-symb-gothic">%</tex:f>';
  command s@\_   () '<tex:f class="aghtex-symb-gothic">_</tex:f>';
  command s@\$   () '<tex:f class="aghtex-symb-gothic">$</tex:f>';
  command s@\#   () '<tex:f class="aghtex-symb-gothic">#</tex:f>';
  command s@\P   () '<tex:f class="aghtex-symb-gothic">¶</tex:f>'; // paragraph
  command s@\S   () '<tex:f class="aghtex-symb-gothic">§</tex:f>'; // section
  command s@\dag () '<tex:f class="aghtex-symb-cent">†</tex:f>'; // dagger
  command s@\ddag() '<tex:f class="aghtex-symb-cent">‡</tex:f>'; // ddagger

  letter s@\>() '<tex:f class="aghtex-binop aghtex-symb-roman">&gt;</tex:f>';
  letter s@\<() '<tex:f class="aghtex-binop aghtex-symb-roman">&lt;</tex:f>';
  letter s@\|() '<tex:f class="aghtex-symb-gothic">|</tex:f>';
  letter f@\:() {
    doc.scanner.Next();
    if (doc.scanner.is(mod_core.SCAN_WT_LTR,"=")) {
      //doc.currentCtx.output.buff.push('<tex:f class="aghtex-binop aghtex-symb-gothic">:＝</tex:f>');
      doc.currentCtx.output.buff.push('<tex:f class="aghtex-binop aghtex-symb-gothic">&#x2254;</tex:f>');
      doc.scanner.Next();
    } else {
      doc.currentCtx.output.buff.push(":");
    }
  };
  letter s@\,() '<tex:f class="aghtex-symb-roman aghtex-comma">,</tex:f>';
  letter f@\.() {
    var html = cmdName;
    doc.scanner.Next();
    if (doc.scanner.wordtype == mod_core.SCAN_WT_LTR && " \b\t\v\r\n\f".indexOf(doc.scanner.word) >= 0) {
      html='<tex:f class="aghtex-comma">'+html+'</tex:f>';
      doc.scanner.Next();
    }
    doc.currentCtx.output.buff.push(html);
  };

  // 空白
  command s>\,() @"\hspace{0.4ex}";  // \hspace{1\thinmuskip}
  command s>\:() @"\hspace{0.53ex}"; // \hspace{1\medmuskip}
  command s>\>() @"\hspace{0.60ex}"; // \hspace{1\medmuskip}
  command s>\;() @"\hspace{0.67ex}"; // \hspace{1\thickmuskip}
  letter  s>\~() @"\hspace{1ex}";
  if (agh.browser.vIE < 7) {
    command s@\!() '<tex:i class="aghtex-negative-space-ie6">&nbsp;&nbsp;</tex:i>&nbsp;';
  } else {
    command s@\!() '<tex:i class="aghtex-negative-space"></tex:i>';
  }

  command s@\allowbreak() '<tex:i class="aghtex-latex-allowbreak"></tex:i>';

  // letter

  if (agh.browser.vIE <= 6 || ns.compatMode == "IE-qks") {
    letter s@\^(#>1)  '<tex:i class="aghtex-sup aghtex-tag-script"><tex:i class="aghtex-sup-nest">#1</tex:i></tex:i>';
    letter s@\_(#>1)  '<tex:i class="aghtex-sub aghtex-tag-script">#1</tex:i>';
    var output_supsub_scripts = function(doc, sup, sub, size) {
      var buff = doc.currentCtx.output.buff;
      if (sub !== null) {
        var cls = size ? ' aghtex-sub-' + size : '';
        buff.push('<tex:i class="aghtex-sub', cls, ' aghtex-tag-script">', sub, '</tex:i>');
      } else if (sup !== null) {
        var cls = size ? ' aghtex-sup-' + size : '';
        buff.push('<tex:i class="aghtex-sup', cls, ' aghtex-tag-script"><tex:i class="aghtex-sup-nest">', sup, '</tex:i></tex:i>');
      }
    };
  } else {
    var output_supsub_scripts = function(doc, sup, sub, size) {
      var buff = doc.currentCtx.output.buff;
      if (sup === null || sub === null) {
        if (sub !== null) {
          var cls = size ? ' aghtex-sub-' + size : '';
          buff.push('<tex:i class="aghtex-sub', cls, ' aghtex-tag-script">', sub, '</tex:i>');
        } else if (sup !== null) {
          var cls = size ? ' aghtex-sup-' + size : '';
          buff.push('<tex:i class="aghtex-sup', cls, ' aghtex-tag-script"><tex:i class="aghtex-sup-nest">', sup, '</tex:i></tex:i>');
        }
        return;
      }

      var cls = size ? ' aghtex-supsub-' + size : '';
      if (!_Mod.GetMathStyle(doc))
        buff.push(
          '<tex:i class="aghtex-supsub', cls, ' aghtex-tag-script">',
          '<tex:i class="aghtex-supsub-u">', sup, '</tex:i>',
          '<tex:i class="aghtex-supsub-d">', sub, '</tex:i></tex:i>');
      else
        buff.push(
          '<tex:i class="aghtex-supsub', cls, ' aghtex-supsub-textstyle aghtex-tag-script">',
          '<tex:i class="aghted-supsub-u"><tex:i>', sup, '</tex:i></tex:i>',
          '<tex:i class="aghtex-supsub-d"><tex:i>', sub, '</tex:i></tex:i></tex:i>');
    };
    letter f\^("#>1") {
      doc.skipSpaceAndComment();
      var sub = null;
      if (doc.scanner.is(mod_core.SCAN_WT_LTR, "_")) {
        doc.scanner.Next();
        sub = doc.GetArgumentHtml();
      }
      output_supsub_scripts(doc, argv[1], sub);
    };
    letter f\_("#>1") {
      doc.skipSpaceAndComment();
      var sup = null;
      if (doc.scanner.is(mod_core.SCAN_WT_LTR, "^")) {
        doc.scanner.Next();
        sup = doc.GetArgumentHtml();
      }
      output_supsub_scripts(doc, sup, argv[1]);
    };
  }
  _Mod.OutputSupSubScripts = output_supsub_scripts;

  // プライム
  // letter s@#"'"() @'<tex:f class="aghtex-textrm">''</tex:f>';
  var prime_handler = function(doc) {
    doc.scanner.Next();
    if (!doc.scanner.is(mod_core.SCAN_WT_LTR, "'") && !doc.scanner.is(mod_core.SCAN_WT_CMD, "rq")) {
      doc.currentCtx.output.buff.push('<tex:f class="aghtex-textrm">′</tex:f>');
      return;
    }

    doc.scanner.Next();
    if (!doc.scanner.is(mod_core.SCAN_WT_LTR, "'") && !doc.scanner.is(mod_core.SCAN_WT_CMD, "rq")) {
      doc.currentCtx.output.buff.push('<tex:f class="aghtex-textrm">″</tex:f>');
      return;
    }

    doc.scanner.Next();
    doc.currentCtx.output.buff.push('<tex:f class="aghtex-textrm">‴</tex:f>');
  };
  _Ctx.AddLetterHandler("'", prime_handler);
  _Ctx.AddCommandHandler("rq", prime_handler);

  //---------------------------------------------------------------
  //    他
  //---------------------------------------------------------------
  var HT_SQRT_STRETCH_IMAGE = mod_base.GetStretchImageTd("stretch_sqrt.png", 2, "√", 'sqrt');
  command f\sqrt(#[]>1#>2) {
    var buff = doc.currentCtx.output.buff;
    buff.push('<table cellpadding="0" class="aghtex-inline aghtex-sqrt"><tr style="height:0px;">');
    if (argv[1].length > 0)
      buff.push('<td class="aghtex-sqrt-index aghtex-tag-script"><span>', argv[1], '</span></td>');
    buff.push(HT_SQRT_STRETCH_IMAGE, '<td class="aghtex-sqrt-body">', argv[2], '</td></tr></table>');
  };

  //---------------------------------------------------------------------------
  // \underbrace, \overbrace

  var GenerateHtmlUndertextImage = (function() {
    switch (ns.compatMode) {
      case "IE-qks":
      case "Fx-qks":
        return function(imgsrc, height, alt) {
          height = height.toString() + "ex";
          return '<td class="aghtex-underbrace-i" style="width:0px;"><img src="' + ns.BaseUrl + imgsrc + '" alt="' + alt + '" style="height:' + height + ';width:100%;"/></td>';
        };
      case "IE-std":
        ns.expression_width = function(elem) {
          var tr = elem.parentElement.parentElement;
          var table = tr.parentElement.parentElement;
          return (table.clientWidth - 4) + "px";
        };
        return function(imgsrc, height, alt) {
          height = height.toString() + "ex";
          var style = 'height:' + height + ';width:expression(' + ns.namespaceName + '.expression_width(this));';
          //var style = 'height:' + height + ';width:expression(this.parentElement.parentElement.parentElement.parentElement.clientHeight-4);';
          return '<td class="aghtex-underbrace-i" style="width:0px;"><img src="' + ns.BaseUrl + imgsrc + '" alt="' + alt + '" style="' + style + '"/></td>';
        };
      case "Fx-std":
        return function(imgsrc, height, alt) {
          height = height.toString() + "ex";
          //return '<td style="height:' + height + ';background-image:url('+ns.BaseUrl+imgsrc+');-moz-background-size:100%;"></td>';
          return '<td class="aghtex-underbrace-i" style="width:100%;"><img src="' + ns.BaseUrl + imgsrc + '" alt="' + alt + '" style="height:' + height + ';width:100%;"/></td>';
        };
      case "Sf-qks": case "Sf-std": // css による switching あり
      case "Op-qks": case "Op-std": // css による switching あり
        return function(imgsrc, height, alt) {
          height = height.toString() + "ex";
          return '<td class="aghtex-underbrace-i" style="height:' + height + ';background-image:url(' + ns.BaseUrl + imgsrc + ');"></td>';
        };
      default:
        return function(imgsrc,height,alt) {
          height = height.toString() + "ex";
          return '<td class="aghtex-underbrace-i" style="height:' + height + ';background-image:url(' + ns.BaseUrl + imgsrc + ');background-size:100% 100%;"></td>';
        };
    }
  })();

  // image を指定する時は、IE/Sf では画像要素で、それ以外では <td> 要素でなければならない。
  function output_underbrace(buff, content, image, undertxt) {
    if (agh.browser.vIE || agh.browser.vSf) {
      if (agh.browser.vIE) {
        if (undertxt)
          buff.push('<tex:i class="aghtex-underbrace-vphantom2">&nbsp;</tex:i><tex:i class="aghtex-underbrace">');
        else
          buff.push('<tex:i class="aghtex-underbrace-vphantom1">&nbsp;</tex:i><tex:i class="aghtex-underbrace">');
      } else {
        buff.push('<tex:i class="aghtex-underbrace" style="padding-bottom:', undertxt ? 2.6 : 1, 'ex">');
      }
      buff.push(content);
      if (image)
        buff.push('<tex:i class="aghtex-underbrace-i">', image, '</tex:i>');
      if (undertxt)
        buff.push('<tex:i class="aghtex-underbrace-i"><tex:ud>', undertxt, '</tex:ud></tex:i>');
      buff.push('</tex:i>');
    } else {
      // image ~ <td>
      buff.push('<table class="aghtex-underbrace"><tr><td class="aghtex-underbrace-b">', content, '</td></tr>');
      if (image)
        buff.push('<tr>', image, '</tr>');
      if (undertxt)
        buff.push('<tr><td class="aghtex-underbrace-t">', undertxt, '</td></tr>');
      buff.push('</table>');
    }
  }
  function output_overbrace(buff, content, image, overtext, className) {
    buff.push('<tex:i class="aghtex-overbrace');
    if (className) buff.push(' ', className);
    buff.push('">');
    if (overtext)
      buff.push('<tex:i class="aghtex-overbrace-t"><tex:i class="aghtex-overbrace-u">', overtext, '</tex:i></tex:i>');
    if (image)
      buff.push('<tex:i class="aghtex-overbrace-i">', image, '</tex:i>');
    buff.push('<tex:i class="aghtex-overbrace-b">', content, '</tex:i></tex:i>');
  }
  _Mod.OutputUnderbrace = output_underbrace;
  _Mod.OutputOverbrace = output_overbrace;

  _Mod.CreateCommandOverStretch = function(info) {
    var className = 'aghtex-overbrace-' + info.commandName;
    var image;
    if (info.svg && /^(Sf|Fx)-/.test(ns.compatMode))
      image = info.svg;
    else
      image = '<img alt="\\' + info.commandName + '" class="aghtex-overbrace" src="' + ns.BaseUrl + info.imageSrc + '" />';

    return new ns.Command2("f", "#>1", function(doc, argv) {
      var text = null;
      if (info.overText) {
        doc.skipSpaceAndComment();
        if (doc.scanner.is(mod_core.SCAN_WT_LTR, "^")) {
          doc.scanner.Next();
          text = doc.GetArgumentHtml();
        }
      }
      var buff = doc.currentCtx.output.buff;
      output_overbrace(buff, argv[1], image, text, className);
    });
  };
  _Mod.CreateCommandUnderStretch = function(info) {
    var image;
    if (agh.browser.vIE || agh.browser.vSf)
      image = '<img alt="\\' + info.commandName + '" class="aghtex-underbrace" src="' + ns.BaseUrl + info.imageSrc + '" />';
    else if (info.svg && /^(Sf|Fx)-/.test(ns.compatMode))
      image = '<td class="aghtex-underbrace-svg">' + info.svg + '</td>';
    else
      image = GenerateHtmlUndertextImage(info.imageSrc, 1, '\\' + info.commandName);

    return new ns.Command2("f", "#>1", function(doc, argv) {
      var text = null;
      if (info.underText) {
        doc.skipSpaceAndComment();
        if (doc.scanner.is(mod_core.SCAN_WT_LTR, "_")) {
          doc.scanner.Next();
          text = doc.GetArgumentHtml();
        }
      }
      var buff = doc.currentCtx.output.buff;
      output_underbrace(buff, argv[1], image, text);
    });
  };

  var generateSvgSource = function(svg) {
    return '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ' + svg.width + ' ' + svg.height + '" preserveAspectRatio="none">'
      + '<g transform="matrix(1 0 0 -1 0 768)"><path fill="currentColor" d="' + svg.path + '" /></g></svg>';
  };
  _Mod["svg:stretch_underbrace"] = generateSvgSource({
    width: 2048, height: 1024,
    path: "M1024 -256c-8 0 -14 6 -16 10c-42 214 -118 370 -216 414h-562c-184 78 -230 508 -230 582"
      + "c0 10 4 18 18 18s18 -8 18 -18c0 -68 56 -342 194 -416h562c148 -70 200 -308 232 -496"
      + "c32 188 84 426 232 496h562c138 74 194 348 194 416c0 10 4 18 18 18s18 -8 18 -18"
      + "c0 -74 -46 -504 -230 -582h-562c-98 -44 -174 -200 -216 -414c-2 -4 -8 -10 -16 -10z"
  });
  _Mod["svg:stretch_overbrace"] = generateSvgSource({
    width: 2048, height: 1024,
    path: "M1024 768c8 0 14 -6 16 -10c42 -214 118 -370 216 -414h562c184 -78 230 -508 230 -582"
      + "c0 -10 -4 -18 -18 -18s-18 8 -18 18c0 68 -56 342 -194 416h-562c-148 70 -200 308 -232 496"
      + "c-32 -188 -84 -426 -232 -496h-562c-138 -74 -194 -348 -194 -416c0 -10 -4 -18 -18 -18s-18 8 -18 18"
      + "c0 74 46 504 230 582h562c98 44 174 200 216 414c2 4 8 10 16 10z"
  });
  _Mod["svg:stretch_hat"] = generateSvgSource({
    width: 2048, height: 1024,
    path: "M9 -256l-9 122l1024 902l1024 -898l-9 -126l-1015 727z"
  });
  _Mod["svg:stretch_tilde"] = generateSvgSource({
    width: 2140, height: 1024,
    path: "M0 -90c246 470 488 858 720 858h1c313 -3 435 -737 739 -740h1c264 0 559 550 669 736"
      + "l10 -172c-340 -613 -539 -848 -725 -848h-2c-320 3 -424 751 -735 752c-176 0 -422 -306 -668 -749z"
  });
  _Mod["svg:stretch_rarr"] = generateSvgSource({
    width: 2048, height: 1024,
    path: "M-0 256c0 34 8 85 18 85l1887 -4c-69 92 -110 295 -126 365c-1 6 -2 12 -2 18c0 25 12 48 25 48"
      + "c12 0 20 -1 31 -48c25 -105 28 -136 63 -223c32 -79 90 -161 144 -216c6 -6 8 -12 8 -25s-2 -19 -8 -25"
      + "c-54 -55 -112 -136 -144 -215c-35 -87 -38 -118 -63 -223c-11 -47 -19 -48 -31 -48c-13 0 -25 22 -25 47"
      + "c0 6 1 12 2 18c16 70 57 274 126 366l-1887 -4c-10 0 -18 50 -18 84z"
  });
  _Mod["svg:stretch_larr"] = generateSvgSource({
    width: 2048, height: 1024,
    path: "M2048 256c0 -34 -8 -84 -18 -84l-1887 4c69 -92 110 -296 126 -366c1 -6 2 -12 2 -18"
      + "c0 -25 -12 -47 -25 -47c-12 0 -20 1 -31 48c-25 105 -28 136 -63 223c-32 79 -90 160 -144 215"
      + "c-6 6 -8 12 -8 25s2 19 8 25c54 55 112 137 144 216c35 87 38 118 63 223c11 47 19 48 31 48"
      + "c13 0 25 -23 25 -48c0 -6 -1 -12 -2 -18c-16 -70 -57 -273 -126 -365l1887 4c10 0 18 -51 18 -85z"
  });
  _Mod["svg:stretch_lrarr"] = generateSvgSource({
    width: 2048, height: 1024,
    path: "M144 174c69 -92 109 -294 125 -364c1 -6 2 -12 2 -18c0 -25 -12 -47 -25 -47c-12 0 -20 1 -31 48"
      + "c-25 105 -28 136 -63 223c-32 79 -90 160 -144 215c-6 6 -8 12 -8 25s2 19 8 25c54 55 112 137 144 216"
      + "c35 87 38 118 63 223c11 47 19 48 31 48c13 0 25 -23 25 -48c0 -6 -1 -12 -2 -18c-16 -70 -57 -273 -126 -365"
      + "h1762c-69 92 -110 295 -126 365c-1 6 -2 12 -2 18c0 25 12 48 25 48c12 0 20 -1 31 -48c25 -105 28 -136 63 -223"
      + "c32 -79 90 -161 144 -216c6 -6 8 -12 8 -25s-2 -19 -8 -25c-54 -55 -112 -136 -144 -215"
      + "c-35 -87 -38 -118 -63 -223c-11 -47 -19 -48 -31 -48c-13 0 -25 22 -25 47c0 6 1 12 2 18c16 70 57 274 126 366z"
  });

  _Ctx.DefineCommand({
    underbrace: _Mod.CreateCommandUnderStretch({commandName: "underbrace", imageSrc: "stretch_underbrace.png", svg: _Mod["svg:stretch_underbrace"], underText: true}),
    overbrace: _Mod.CreateCommandOverStretch({commandName: "overbrace", imageSrc: "stretch_overbrace.png", svg: _Mod["svg:stretch_overbrace"], overText: true}),
    widehat: _Mod.CreateCommandOverStretch({commandName: "widehat", imageSrc: "stretch_widehat.png", svg: _Mod["svg:stretch_hat"]}),
    widetilde: _Mod.CreateCommandOverStretch({commandName: "widetilde", imageSrc: "stretch_widetilde.png", svg: _Mod["svg:stretch_tilde"]}),
    overrightarrow: _Mod.CreateCommandOverStretch({commandName: "overrightarrow", imageSrc: "stretch_rarr.png", svg: _Mod["svg:stretch_rarr"]}),
    overleftarrow: _Mod.CreateCommandOverStretch({commandName: "overleftarrow", imageSrc: "stretch_larr.png", svg: _Mod["svg:stretch_larr"]})
  });

  //---------------------------------------------------------------
  //    分数 / atop
  //---------------------------------------------------------------
  if (agh.browser.vIE <= 8 || ns.compatMode == "IE-qks") {
    command s@\frac(#>1#>2) '<table cellspacing="0" class="aghtex-frac-ie6"><tr><td class="aghtex-frac-ie6-num">#1</td></tr><tr><td class="aghtex-frac-ie6-den">#2</td></tr></table>';
    command f\over() {
      var output = doc.currentCtx.output;
      var former = output.toHtml();
      output.clear();
      output.buff.push('<table cellspacing="0" class="aghtex-frac-ie6"><tr><td class="aghtex-frac-ie6-num">', former, '</td></tr><tr><td class="aghtex-frac-ie6-den">');
      output.appendPost('</td></tr></table>');
    };
  } else {
    function cmd_frac(doc, argv) {
      var buff = doc.currentCtx.output.buff;
      if (argv[0] == 'dfrac' || argv[0] != 'tfrac' && !_Mod.GetMathStyle(doc))
        buff.push('<tex:frac2><tex:num>', argv[1], '</tex:num><tex:den>', argv[2], '</tex:den></tex:frac2>');
      else
        buff.push(
          '<tex:frac2 class="aghtex-tag-script"><tex:num><tex:i>', argv[1],
          '</tex:i></tex:num><tex:den><tex:i>', argv[2],
          '</tex:i></tex:den></tex:frac2>');
    }
    _Mod["cmd:frac"] = cmd_frac;

    command f\frac(#>1#>2) { cmd_frac(doc,argv); };
    command f\over() {
      var output = doc.currentCtx.output;
      var former = output.toHtml();
      output.clear();
      output.buff.push('<tex:frac2><tex:num>', former, '</tex:num><tex:den>');
      output.appendPost('</tex:den></tex:frac2>');
    };
  }

  function Atop(output, left, right, bar) {
    var former = output.toHtml();
    output.clear();

    var buff = output.buff;
    buff.push('<table cellspacing="0" class="aghtex-inline"><tr style="height:0px;">');
    if (left)
      mod_base.OutputStretchBracketTd(output, left, 2);

    buff.push('<td class="', bar ? 'aghtex-genfrac-numerator' : 'aghtex-genfrac-center', '"');
    buff.push('>', former, '</td>');

    if (right)
      mod_base.OutputStretchBracketTd(output, right, 2);
    buff.push('</tr><tr><td class="aghtex-genfrac-center">');
    output.appendPost('</td></tr></table>');
  }
  command f\atopwithdelims("#!1#!2") {
    Atop(doc.currentCtx.output, argv[1], argv[2]);
  };
  command f\atop() {
    Atop(doc.currentCtx.output, null, null);
  };
  command f\choose() {
    Atop(doc.currentCtx.output, "(", ")");
  };
  command f\brack() {
    Atop(doc.currentCtx.output, "[", "]");
  };
  command f\brace() {
    Atop(doc.currentCtx.output, "{", "}");
  };
  command f@\above() {
    Atop(doc.currentCtx.output, null, null, true);
    // ■ GetLengthArgument で線の太さを読み取り
  };
  command f\abovewithdelims("#!1#!2") {
    Atop(doc.currentCtx.output, argv[1], argv[2], true);
    // ■ GetLengthArgument で線の太さを読み取り
  };
  //---------------------------------------------------------------
  //    総和 / mathop
  //---------------------------------------------------------------
  command f\mathop(#>1) {
    var buff = doc.currentCtx.output.buff;
    var sbsp = doc.GetSubSup();
    var sub = sbsp.sub, sup = sbsp.sup, text = argv[1];
    if (sub == null && sup == null) {
      buff.push('<tex:i class="aghtex-mathop">', text, '</tex:i>');
    } else if (!_Mod.GetMathStyle(doc)) {
      buff.push('<tex:i class="aghtex-mathop">');
      if (agh.browser.vIE < 8 || ns.compatMode == "IE-qks") {
        // Note: inline-table は IE 8 以降
        buff.push('<tex:i class="aghtex-mathop-ie6container">');
        buff.push('<tex:i class="aghtex-mathop-sup aghtex-tag-script">', sup || '&nbsp;', '</tex:i>');
        buff.push(text);
        buff.push('<tex:i class="aghtex-mathop-sub aghtex-tag-script">', sub || '&nbsp;', '</tex:i>');
        buff.push('</tex:i>')
      } else {
        if (sub !== null)
          buff.push('<tex:i class="aghtex-mathop-subcontainer">');

        if (sup !== null) {
          buff.push('<tex:i class="aghtex-mathop-supcontainer">');
          buff.push('<tex:i class="aghtex-mathop-sup aghtex-tag-script">', sup, '</tex:i>');
          buff.push(text);
          buff.push('</tex:i>');
        } else {
          buff.push('<tex:i class="aghtex-mathop-text">', text, '</tex:i>');
        }

        if (sub !== null)
          buff.push('<tex:i class="aghtex-mathop-sub aghtex-tag-script">', sub, '</tex:i></tex:i>');
      }
      buff.push('</tex:i>');
    } else {
      buff.push('<tex:i class="aghtex-mathop">', text);
      _Mod.OutputSupSubScripts(doc, sup, sub);
      buff.push('</tex:i>');
    }
  };

  command f\sum@("#>1") {
    var buff = doc.currentCtx.output.buff;
    var sbsp = doc.GetSubSup();
    if (sbsp.sub == null && sbsp.sup == null) {
      buff.push("<tex:sum>", argv[1], "</tex:sum>");
    } else {
      buff.push(
        '<tex:sum2><tex:sum2u class="aghtex-tag-script">', sbsp.sup || '&nbsp;',
        '</tex:sum2u><tex:sum2m>', argv[1],
        '</tex:sum2m><tex:sum2d class="aghtex-tag-script">', sbsp.sub || '&nbsp;',
        '</tex:sum2d></tex:sum2>');
    }
  };

  _Mod.CreateCommandSummation = (function InitCreateCommandSummation() {
    var _ht_strut = '<tex:i class="aghtex-sum-strut">&nbsp;</tex:i>'
    var ht_table_beg = '<table class="aghtex-sum"><tr><td class="aghtex-sum-m"><tex:i class="aghtex-sum-m">';
    var ht_table_mid = '</tex:i></td></tr><tr><td class="aghtex-sum-d"><tex:i class="aghtex-sum-d aghtex-tag-script">'+_ht_strut;
    var ht_table_end = _ht_strut+'</tex:i></td></tr></table>';
    var ht_sum_begin = '<tex:i class="aghtex-sum">';

    var fWA = false;
    if (agh.browser.vSf || agh.browser.vIE && (agh.browser.vIE < 8 || ns.compatMode == 'IE-qks')) {
      // WorkAround - 'CSS2.1 table{vertical-align:baseline;}'
      var fWA = true;
      var ht_sum_beginWA = ht_sum_begin.replace('"aghtex-sum"','"aghtex-sum aghtex-sum-WA1"');
      ht_table_beg = ht_table_beg.replace('"aghtex-sum"', '"aghtex-sum aghtex-sum-WA1"');
      if (agh.browser.vIE) {
        // 何故か、空文字列がないと vertical-align:-0.02 した分だけ、Σの下端が切れてしまう。
        ht_table_mid = ht_table_mid.replace('</tex:i>', '</tex:i>\n');
      }
    }

    return function CreateCommandSummation(content) {
      return new ns.Command2("f", "", function(doc, argv) {
        var buff = doc.currentCtx.output.buff;
        if (!_Mod.GetMathStyle(doc)) {
          var sbsp = doc.GetSubSup();
          var fI = false;

          if (fWA && sbsp.sub != null) {
            fI = true;
            buff.push(ht_sum_beginWA);
          } else { // } else if (sbsp.sup!=null) {
            fI = true;
            buff.push(ht_sum_begin);
          }

          if (sbsp.sup != null) {
            buff.push('<tex:i class="aghtex-sum-u aghtex-tag-script">',sbsp.sup,'</tex:i>');
          }
          if (sbsp.sub != null) {
            buff.push(ht_table_beg,content,ht_table_mid,sbsp.sub,ht_table_end);
          } else {
            buff.push('<tex:i class="aghtex-sum-m1"><tex:i class="aghtex-sum-m2">', content, '</tex:i></tex:i>');
          }

          if (fI)
            buff.push('</tex:i>');
        } else {
          buff.push('<tex:f class="aghtex-symb-mincho">', content, '</tex:f>');
        }
      });
    };
  })();
  _Ctx.AddCommandHandler("sum", _Mod.CreateCommandSummation('&#x2211;'));
  _Ctx.AddCommandHandler("prod", _Mod.CreateCommandSummation('&#x220f;'));
  _Ctx.AddCommandHandler("coprod", _Mod.CreateCommandSummation('&#x2210;'));
  _Ctx.AddCommandHandler("bigcap", _Mod.CreateCommandSummation('&#x22C2;'));
  _Ctx.AddCommandHandler("bigcup", _Mod.CreateCommandSummation('&#x22C3;'));
  _Ctx.AddCommandHandler("bigvee", _Mod.CreateCommandSummation('&#x22C1;'));
  _Ctx.AddCommandHandler("bigwedge", _Mod.CreateCommandSummation('&#x22C0;'));
  _Ctx.AddCommandHandler("bigodot", _Mod.CreateCommandSummation('&#x2A00;'));
  _Ctx.AddCommandHandler("bigoplus", _Mod.CreateCommandSummation('&#x2A01;'));
  _Ctx.AddCommandHandler("bigotimes", _Mod.CreateCommandSummation('&#x2A02;'));
  _Ctx.AddCommandHandler("biguplus", _Mod.CreateCommandSummation('&#x2A04;'));

  //---------------------------------------------------------------
  //    積分
  //---------------------------------------------------------------
  function cmd_int(doc, ch) {
    var output = doc.currentCtx.output;
    var buff = output.buff;

    // content
    if (!_Mod.GetMathStyle(doc)) {
      // 普通の (大きな) 積分記号
      buff.push('<tex:f class="aghtex-int">',ch,'</tex:f>');

      var sbsp = doc.GetSubSup();
      switch ((sbsp.sub ? 1 : 0) + (sbsp.sup ? 2 : 0)) {
      case 1:
        buff.push('<tex:i class="aghtex-sub aghtex-sub-int">', sbsp.sub, '</tex:i>');
        break;
      case 2:
        buff.push('<tex:i class="aghtex-sup aghtex-sup-int">', sbsp.sup, '</tex:i>');
        break;
      case 3:
        buff.push(
          '<table class="aghtex-inline aghtex-int"><tr><td class="aghtex-int-sup aghtex-tag-script"><tex:i class="aghtex-int-sup">', sbsp.sup,
          '</tex:i></td></tr><tr><td class="aghtex-int-sub aghtex-tag-script"><tex:i class="aghtex-int-sub">', sbsp.sub,
          '</tex:i></td></tr></table>');
        break;
      }
    } else {
      // 小さな積分記号
      buff.push('<tex:f class="aghtex-symb-mincho">', ch, '</tex:f>');
    }
  }
  command f\int() { cmd_int(doc,'∫'); };
  command f\oint() { cmd_int(doc,'∮'); };
  _Mod["cmd:int"] = cmd_int;
}

context "mode.math" {
  //---------------------------------------------------------------
  //  アクセント・重ね記号・積み重ね記号
  //---------------------------------------------------------------

  if (ns.compatMode == "IE-qks" || agh.browser.vIE < 8) {
    command s@\not(#>1) '<tex:lap><tex:m>/</tex:m><tex:m>#1</tex:m></tex:lap>';
  } else {
    command s@\not(#>1) '<tex:i class="aghtex-accent">#1<tex:i class="aghtex-accent-container"><tex:i class="aghtex-accent-symbol-over">/</tex:i></tex:i></tex:i>';
  }

  (function() {
    function is_single_lower(html) {
      var text = agh.Text.Unescape(html, "html");
      return /^[acegijmnopqrsuvwxyzαγεηικμνοπρστυφχψω\u0131＝－]*$/.test(text);
    }
    function is_slanted(html,ismath) {
      if (ismath)
        return !(/^<tex:f class="aghtex-math(?:rm|sf|tt|bf|frak)">/.test(html));
      else
        return false;
    }
    function is_slanted_fullheight(html, ismath) {
      // \mathrm
      if (!is_slanted(html, ismath)) return false;

      // 中身が複数文字ある場合
      var text = agh.Text.Unescape(html, "html");
      if (text.length != 1) return false;

      if (/<tex:f class="aghtex-greek">[βδζθλξΑ-Ω]<\/tex:f>/.test(html)) {
        // \beta, \varGamma, etc.
        return true;
      }

      return /[bdfhkltA-Z∂]/.test(text);
    }
    function is_tailed(html) {
      var text = agh.Text.Unescape(html, "html");
      if (text.length != 1) return false;
      return "gjpqy".indexOf(text) >= 0;
    }

    _Ctx.DefineCommand('stackrel', ['f;#>1#>2', function(doc, argv) {
      var suffix = is_single_lower(argv[2]) ? "-lower" : "";
      var buff = doc.currentCtx.output.buff;
      if (ns.compatMode == "IE-qks" || agh.browser.vIE < 8) {
        buff.push(
          '<tex:i class="aghtex-ie6stackrel">',
          '<tex:i class="aghtex-ie6stackrel-top', suffix, '">', argv[1], '</tex:i>',
          '<tex:i class="aghtex-ie6stackrel-body">', argv[2], '</tex:i></tex:i>');
      } else {
        buff.push(
          '<tex:i class="aghtex-stackrel', suffix, '">',
          '<tex:i class="aghtex-stackrel-top', suffix, '">',
          argv[1], '</tex:i>', argv[2], '</tex:i>');
      }
    }]);

    // 2012/12/25 17:47:56
    _Mod.CreateAccentCommand = function(type, htsymb, ismath) {
      var cls_container = 'aghtex-accent-container aghtex-accent-container-' + type;
      if (agh.browser.vSf)
        cls_container += ' aghtex-accent-sf aghtex-accent-sf-' + type;

      var ht1 = '<tex:i class="aghtex-accent aghtex-accent-' + type + '">';
      var ht2 = '<tex:i class="' + cls_container + '"><tex:i class="aghtex-accent-symbol-';
      var ht3 = '">' + htsymb + '</tex:i></tex:i></tex:i>';

      if (type == 'low') {
        return ns.Command2("f", "#>1", function(doc, argv) {
          var content = argv[1];
          var t = type;
          if (content.length == 0)
            content = '&nbsp;';
          else if (is_tailed(content))
            t += "T";

          var buff = doc.currentCtx.output.buff;
          buff.push(ht1, content, ht2, t, ht3);
        });
      } else {
        return ns.Command2("f", "#>1", function(doc, argv) {
          var content = argv[1].trim();
          var t = type;
          if (content.length === 0)
            content = '&nbsp;';
          else if (is_single_lower(content)) {
            if (is_slanted(content, ismath))
              t += "L"; // 数式小文字
            else
              t += "S"; // 直立体小文字
          } else if (is_slanted_fullheight(content,ismath))
            t += "U"; // 数式大文字

          var buff = doc.currentCtx.output.buff;
          buff.push(ht1, content, ht2, t, ht3);
        });
      }
    };

    _Ctx.DefineCommand({
      acute: _Mod.CreateAccentCommand('acc', '<tex:f class="aghtex-symb-mincho">&#x00B4;</tex:f>', true), // &#x02CA;
      bar  : _Mod.CreateAccentCommand('acc', '<tex:f class="aghtex-symb-mincho">&#x00AF;</tex:f>', true), // &#x02C9;
      breve: _Mod.CreateAccentCommand('acc', '<tex:f class="aghtex-symb-mincho">&#x02D8;</tex:f>', true),
      check: _Mod.CreateAccentCommand('acc', '<tex:f class="aghtex-symb-mincho">&#x02C7;</tex:f>', true),
      dot  : _Mod.CreateAccentCommand('acc', '<tex:f class="aghtex-symb-mincho">&#x02D9;</tex:f>', true),
      ddot : _Mod.CreateAccentCommand('acc', '<tex:f class="aghtex-symb-mincho">&#x00A8;</tex:f>', true),
      grave: _Mod.CreateAccentCommand('acc', '<tex:f class="aghtex-symb-mincho">&#x02CB;</tex:f>', true),
      hat  : _Mod.CreateAccentCommand('acc', '<tex:f class="aghtex-symb-mincho">&#x02C6;</tex:f>', true),
      tilde: _Mod.CreateAccentCommand('acc', '<tex:f class="aghtex-symb-mincho">&#x02DC;</tex:f>', true),
      vec  : _Mod.CreateAccentCommand('vec', '<tex:f class="aghtex-syma-mincho">&#x2192;</tex:f>', true)
    });

    if (ns.compatMode == "IE-qks" || agh.browser.vIE < 8) {
      _Mod.CreateAccentCommandQksB = function(height, htSymbol) {
        var TAG_L = '<tex:lap><tex:m style="top:';
        var TAG_M = 'ex;">' + htSymbol + '</tex:m><tex:m>';
        var TAG_R = '</tex:m></tex:lap>';

        var style_top = -height; // for IE
        return new ns.Command2("f", "#>1", function(doc, argv) {
          var t = style_top;
          if (is_tailed(argv[1])) t += 0.4;
          t = 0.01 * Math.round(t * 100);

          var buff = doc.currentCtx.output.buff;
          buff.push(TAG_L, t, TAG_M, argv[1], TAG_R);
        });
      };
    }

  })();
}
