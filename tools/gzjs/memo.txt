
memo.txt for agh/tools/gzjs

------------------------------------------------------------------------------
  Note
------------------------------------------------------------------------------

* 各ファイルの出所に関して:

  - inflate/frame-20090720.js は

    sfxframe.js

    にあった物を編集した物である。しかし、
    現在は sfxframe.js にあった物は既に削除されている。

  - inflate/frame-20090728.js は

    inflate/frame-20090728-src.js
    --symlink-> 2009/bin/sfx.inflate.frame.js
    --symlink-> /home/koichi/Desktop/Script/downloaded/MasanaoIzumo/bin/sfx.inflate.frame.js

    を元に作成した物である。更に、bin/sfx.inflate.frame.js は
    高度な JavaScript 集にある物を一生懸命短くなる様に編集した物である。


------------------------------------------------------------------------------
  Memo
------------------------------------------------------------------------------


2015-10-11

  git repo に登録するに当たって整理する。



2015-01-24

  gzjs.sfxframe.js を弄りたくなったのでまたここに戻ってきた。
  どの様に gzjs.frame.js が生成されているのかを確認する。

  gzjs.sfxframe.js は、
    sfx.inflate.src.js + mwg.inflate.js
    --(gzjs に通す                     )→ bin/sfx.inflate.frame.js
    --(var inflate=&inflace(...) を挿入)→ sfx.inflate.frame.js
  の様にして生成される。

  しかし、出て来る結果は実際に使っている物よりも更に短くなっている様だ。
  というか正しく動くのだろうか?

  これからしたい事は以下の事である。
  1. 圧縮データの部分を同じ儘にして動くように変更する
    →試してみた所、新しい版の frame-20140728 でも問題なく動くようだ。
  2. base64 から ascii85' に変更しても動く様にする
    (base64 のルールは文字コード的に綺麗でないのでデコーダにテーブルを持たなければならない。
    どうせ独自の符号化テーブルを使うのであれば 85 文字集合にしてしまえば良い。
    つまり実装するのは一般的な ascii85 ではなく勝手に変更した物。)

    - base64符号化の代替はサイズ的に有効か?
        93文字集合 → log(93)/log(256) = 1.223398946422657009082923964843 文字で 1byte
                      1文字で 0.81739485138850392378248281789017 byte
        85文字集合 → log(85)/log(256) = 1.2481685201778000896203004685148 文字で 1byte
                      1文字で 0.80117386701721271951554818003712 byte
        93文字集合の方が85文字集合より 1 文字当たり
          0.8173-0.8011 = 0.016220984371291204266934637853169 byte 得。1.6% しか得でない。
          61.648539762473067619903334480834 文字で漸く 1 byte 分多く符号化できる。
          更にここまで伸ばすとすると多倍長の計算が必要になるので処理も大変である。

        例えば 64byte → 79文字 in base93
                      → 80文字 in base85
                      → 86文字 in base64

      それ程にはサイズが小さくなる訳ではない。
      それでも (符号化前を100%として) 13% 程度小さくなる。

    - その為には圧縮器(.cs)と展開器(.cs)を両方書かなければならない。

    - 取り敢えず動くようになった。

      多少コードの圧縮を試みる: impl_inflate.js


  3.gzip の出力を適当に切り出して deflate に食わせる事は出来ないのか?
    gzip の出力は中に deflate を含んでいるはず。これを切り出して動くのかどうか。
    →できた。gz ファイルにはヘッダがあって、そのヘッダを跳ばして圧縮データの部分を切り出せば
      javascript の inflate 関数でも展開する事ができた。切り出しは gzcut というプログラムを書いた。

    しかし、そもそもgzipの方が良い圧縮をするのかどうかは謎??

    試してみたがそんなに変わらない様だ。
    折角 C# 単体で良い圧縮が出来ている訳だから
    gzip の出力を解析をするのも面倒だし、現状で良いと判断する。
