agh/js - Ageha JavaScript Library v3.2
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
  Memo
-------------------------------------------------------------------------------

命名規則概略

  % 関数名
  %
  % - 基本的には動詞 (命令形) で始める
  % - 動詞 (三単現) で始まる関数名は、副作用がなく bool を返す判定関数を表す。
  % - 一単語からなる名詞の関数名は、何らかの値の取得関数を表す。対応する設定関数は存在しない (存在する場合は対称性の為に get/set prefix をつけるべきである)。
  % - 取得・設定関数は get/set で始める。
  %
  % 副作用が■

  * 識別子の構成方法

    複数の単語を繋げて識別子名を作る時、様々なやり方がある。

    - helloworld
    - HELLOWORLD
    - hello_world
    - HELLO_WORLD
    - helloWorld
    - HelloWorld
    - hello-world (lisp, css)
    - \hello@world (tex)

    一般的には、どれか一つに統一するのが望ましいとされるが、
    複数の方法を使って識別子の種類を区別する事もある。
    例えば、C言語の系統では HELLO_WORLD の形式は定数・マクロで使われる事が多い。
    また Java では  HelloWorld は型名・クラス名に使用し
    helloWorld を関数名・変数名に使用する。
    また、公開関数・公開変数には HelloWorld を使用し、
    内部関数・内部変数には helloWorld または _ で始まる物を使うという方法もある。

  * 関数名

    基本的に動詞 (命令形) で始めるのが普通である。

    複数の組となる操作を行う関数群には、
    getHoge/setHoge 等の様に動詞部分だけを入れ替えた関数名がよく使われる。

    - get/set, get/put, read/write (取得・設定、入力・出力)
    - set/unset, set/reset
    - allocate/free, new/delete
    - add/remove/prepend/append/insert (追加・削除)
    - push/pop (スタック, LIFO)
    - enque/deque, enq/deq (キュー, FIFO)
    - shift/unshift (JavaScript 配列, 先頭への要素の挿入)

    - create, initialize, clear, load, save

    C/Fortran など名前空間のない古い言語では、
    識別子名の前に操作の種類やライブラリを区別する prefix を付ける事がある。
    mem/str/wcs 等々。

    単体の名詞を関数名とする場合は、副作用なく何らかの値を取得する関数である。
    引数を取らない物と引数を取る物をオーバーロードして、
    前者を値の取得関数とし後者を値の設定関数とする事もある。

    is/can で始まる関数は、術語関数 (副作用が無く真偽値を戻す) を表す。
    更に、動詞 (三単現) で始まる関数も術語関数とする事もある。
    Ruby では ? で終わる関数名を用いる。

    Ruby では ! で終わるメソッド名は、
    オブジェクトに対する破壊的な操作を表す。
    ! の無いメソッドも同時に定義されている場合、
    そちらは操作後の状態を持つ新しいオブジェクトを生成する。

  * 変数・型名

    通常は名詞、名詞節を変数名・型名とする。
    C 系統では定数・マクロは全て大文字で _ で繋いで表現する事が多い。
    また、特定の単語は高頻度で特定の種類の変数・型である事を表す。

    - property/attribute
    - processor/handler/listener/observer 何処かに登録して実行して貰う関数オブジェクト
    - i/j/k カウンタ・インデックス (ローカル変数)
    - iterator, enumerator
    - descriptor 何らかの情報を取得する為のオブジェクト
    - buffer,

    最近では内部で使用する場合でも a や b や c 等の短い変数名ではなくて、
    polarAngle, impactParameter, cosine などの内容を説明する名詞節にする方が良いとされる。

-------------------------------------------------------------------------------
  ToDo
-------------------------------------------------------------------------------

2015-08-30

  * 取り敢えず git repository として初期化した。

    未だ追加されていないファイルなどについても整理して追加する必要がある。

Known Bugs:

  * aghtex4chrome: reload した時に \r\n が二重改行になっている。
  * latex.\mathbb: IE8-std で表示されていない。
  * latex.\left: sup, sub として高さのある物を指定すると中身が変な位置に表示される。(sup/sub を table 内に表示するのは限界があるか?)
  * latex.\leadsto: 記号のうねりの数が異なる
  * 技術的問題 (保留)
    - latex.\frac: IE6-IE8 連分数が綺麗に表示できない (IE8-std ではどうか?)
    - latex/上付下付: IE6-7 上付と下付を重ねて表示できない
    - latex/上付下付: IE8 上付と下付を同時に表示する時、下付に分数など高さのある物を表示すると上付の位置が上へ移動する。
    - latex.\underbrace: Sf で undertext に二行以上書くと、下の文字列と被る。
      (Sf は table vertical-align:baseline に対応していない?)

実装中:

  * 2013-11-06 "latex/mod_math.ctx: mathstyles"

    latex/mod_math.ctx, pkg_ams.ctx: mathstyles は Document#flags を用いれば簡単に実装できるかも。
    →mathstyles は context と共にクリアされる性質の物なので Document#flags ではなくて、
    Document#Get/SetContextVariable を使うべき物である。

    と思って SetContextVariable を使って
    \displaystyle の類の実装を追加しようと思ったら、既に存在していた。
    但し、scriptstyle, scriptscriptstyle に就いて、
    フォントの大きさも指定する様にする事が todo になっている。

  * latex/core.js

    色々細かい物を実装していく内に、段々とコア部分の固定的な実装が問題になってきた。
    例えば、scanner による字句の読み取り方法が固定されている。
    コマンドはコマンドとして読み取られるし、コメントはコメントとして読み取られる。
    しかし、本当の TeX は殆どの場合に於いてその様に動作するが、
    \verb やその他の特別なコマンドの中では \catcode を設定する事に拠って何とでも読み取り方法を変更する事が可能である。
    今までは速度を重視するという言い訳でこれらの対応を渋ってきたが、
    今後ちゃんとした実装を目指す上ではこの辺りからしっかりとしておきたい所である。
    (もちろん、標準的な文脈では今まで用いてきた最適化された scanner を使用する様にしたい。)

    その為には、既存の TeX の読み取りの方法について予め調べておく必要がある。
    \catcode コマンドは、\catcode整数=整数 の形式を取る。
    初めの整数は文字コードで次の整数は catcode である。
    catcode のそれぞれの意味については http://en.wikibooks.org/wiki/TeX/catcode を参照する。

  * TeX の字句・レジスタなどについて:

    - 整数の指定: 整数を直接表記する。

      または、文字コードで指定する: ` に続けて文字を記すとその文字のコードが使用される。
      ` に続けてコマンド名を記すとそのコマンドに割当てられた番号が使用される。
      一文字の名前のコマンドに関してはその文字の文字コードであるが、
      複数文字のコマンドの場合は TeX 実行の過程で適当に割り当てられた番号が表示される。
      16進数で指定する事もできる: " に続けて16進数を記せば良い。
      8進数で指定する場合には ' に続けて 8 進数を指定する。

    - dimen の指定: 単位付き長さを指定する。
      小数+単位 または 長さコマンド または 小数+長さコマンド を指定する。

    - glue(skip):

      更に glue は dimen の後に plus &lt;dimen&gt; minus &lt;dimen&gt; を後ろに続ける事ができる。
      また Glueコマンドを指定する事もできる。
      (glue が使える箇所もあれば、単独の dimen しか使えない箇所もある?)
      a plus b minus c は CSS3 flex-grow, flex-shrink, flex-basis, max-width, min-width を組み合わせれば何とか対応できる?
      因みに \hfill は max-width:fill-available (-moz-available, -moz-fill-available) というのがあるらしい。

    - ^^ は Control 文字を生成する charcode|=64.</li>

    これらのリテラルを読み取る時は単に字面で読み取るのではなく、
    マクロについての展開も実行される。
    特に数字に関してはマクロが展開された後に連結されて解釈される。
    とはいいつつも、取り敢えず、字面を見る実装でもいいから実装してしまったほうが良い様な気もする。

-------------------------------------------------------------------------------

2014-09-27

  * ■aghtex4chrome/preview: 改行が消えている (これは新しい編集画面で改行が div に置換される為)
  * latex: usepackage{array} の \tabularline
  * ■latex:cmd.overline: 文字毎に上線が引かれる。本来は全体に対して overline が引かれるべきなのでは?^^要確認^^
  * latex: コマンドには long/not long という物があるらしい。
    - \long\def, \newcommand etc. は long であり、\def, \newcommand*, etc. は not long である。
    - long のコマンドの引数は 空行, \par を含む事ができる。
    - not long なコマンドの引数は 空行, \par があるとエラーになる。
    - 参考: [[macros - What's the difference between \newcommand and \newcommand*? - TeX - LaTeX Stack Exchange>http://tex.stackexchange.com/questions/1050/whats-the-difference-between-newcommand-and-newcommand]]
  * latex: TOCHECK, \makeatletter\def\hoge{\hoge@hoge}\makeatother 等と定義した物を \makeatother の状態で使用した時、どう動作するべきか?

2014-03-13

  * latex/aghfonts:

    - アルファベット roman 体も収録する。linux 等一部の OS でまともな roman 体が表示されない為。
    - 数字も収録する。

2014-03-08

  * verbatim ← % も読み取れる字句解析が必要 ← \catcode レジスタ ← TeX レジスタの包括的実装(?)

2014-03-07

  * latex/cls_article.ctx: cls:article abstract の動作について調べて再実装する。
  * latex/cls_article.ctx: \today 対応。どこに定義するべきか、どの様に定義するべきか。
  * latex/cls_article.ctx(cls:revtex4): \email を複数指定した場合の動作。
  * latex/cls_article.ctx(cmd:email): \email を追加する
  * 目標 http://tex.stackexchange.com/questions/38674/the-the-command
  * 目標 http://note.golden-lucky.net/2012/12/textex.html
  * こんな物も→ dvi.js https://github.com/naoyat/dvi.js/wiki

2013-11-06

  * latex/mod_common.ctx: textvisiblespace 幅が大きいのでフォントを埋め込む。
  * latex/base.ctx: 伸縮括弧を svg にする? svg が fontforge から出力できたはず。background-size でも伸縮できる様だ。
  * latex/aghfonts:mathrm: bugfix, u2032 は本来大きな prime ではなくて、上付の prime の意味である。
    なのでグリフを mathrm から mathbb に移動し、\prime の class を Amc に変える。
  * latex/font:aghtex_mathrm: \pounds (math/text-mode), \textsterling (text-mode) は cmu に入っている(?)ので、移動してくる。
  * latex/font:aghtex_mathbb: 1, 2 がないので、何処からか持ってくる。
  * latex/mod_common: \symbol は unicode で良い様なので実装する。フォントは指定しない。
  * latex/font:aghtex_mathcal: 小文字は ekcal 辺りから持ってきても OK?

2013-11-05

  * latex/pkg_ams.ctx: \sqrt の尻尾に最大高さを設定する? (余り高さのある要素を中に指定すると伸び切ってしまうので。)
    td[valign="bottom"] にして、尻尾の部分を img[style="max-height:5em;"] 等にすれば良い?

  * latex: \bigl, \bigr などのフォント変更。
  * agh.lang.ps: systemdict.define_operators (register_operator を一括で行う) ■中途半端な状態になっているので正しく実装。
  * agh.lang.ps: arc 関連の実装 [P1.4 in memo.txt]

  * latex: \bigsqcup

2013-11-04

  * latex/pkg_ams.ctx: \dots, 続きに来る word に応じて種類を変化させる。
  * latex/pkg_ams.ctx(cmd_genfrac): mathstyle (displaystyle/textstyle など) に対応。
  * latex/pkg_ams.ctx(cmd_genfrac): 下付・上付に対応? (platex の動作を確認)
  * latex/mod_math.ctx(cmd_int): mathstyles に対応。
  * latex/mod_math.ctx(cmd_int): 上付・下付の位置について。
    括弧などで囲んだ時に括弧が大きくなり過ぎない様に、上下にはみ出させているが、
    これによって上下の数式と被ってしまっている。
    括弧が大きく為りすぎるのは仕方がないので、上下にはみ出るのは止めた方が良い。

2013-08-31

  * agh.js (addEventListener): IE MemLeak Support Version Restriction

2013-08-29

  * agh.debug.js (DomTreeNode): コードの整理
  * agh.debug.js (DomTreeNode): HTML 要素の表示
  * agh.debug.js (DomTreeNode): 値の編集機能
  * agh.debug.js (DomTreeNode): 開いた時刻の表示と更新ボタン
  * agh.debug.js (DomTreeStackInfo): 関数引数の読み取り
  * agh.debug.js: ドキュメントコメントの解釈
  * agh.debug.js: HTMLTreeNode?

2013-08-21

  * agh.dom.js: 整理

    - Fx で補完される innerText の内容が異なる。
    - innerText 取得: [[DOM の textContent と innerText について - フリーフォーム フリークアウト>http://d.hatena.ne.jp/cou929_la/20110517/1305644081]]
    - innerText 取得: [[plain-text.js>http://clubajax.org/files/lang/plain-text.js]]

2013-08-02

  * latex/latex.pp.css: 下付・上付などの文字は画面に表示する事を想定して余り小さくならない様にしているが、
    印刷する時には本来の小ささになるようにしても良いのではないか。

2013-01-21

  * prog.std.css: prog-items のアイコンの指定を整理。
  * agh.text.color.js: C++ Concept (非標準) の keyword を追加。

2013-01-14

  * latex/pkg:amsmath/env:flalign: \hfill の効果を正しく表示する (間に width:100% の要素を追加すれば良い?)

2012-12-24

  * ns.Command2

    - latex: %%脆弱性 ユーザ定義マクロでの #1 以外の引数の形式を禁止する。%% と思ったが、tex source に展開されるので問題なし。
    - latex/ns.Command2: 長さを解釈するコード (scanner も一緒に対応?)
    - latex/ns.Command2: trim, escape 等の修飾を充実させる。現在の機能と導入する機能の整理
    - latex/ns.Command2: 引数読み取り部はコードを生成する様に変更

  * latex/cls:revtex, revtex4, jarticle, jsarticle, book, jbook, jsbook, report, jreport, jsreport
  * latex/pkg:mathrsbf

2012-12-23

  * addon/aghtex4chrome/*.tex: タイトルをブラウザに反映させる?
  * addon/index.htm: 説明, Windows での関連づけについて, emacs の設定について
  * latex/error-globalization: 既存の他のエラーについても globalization を利用する形式に変更する

2012-12-21

  * latex: \centering, \medskip, \newbox, \savebox, etc
  * latex/mod_length: parseUnit が失敗している時の状況について調べる, 単位の代わりに \textwidth 等となっていればそれに対応する
  * latex/aghtex4chrome.js: gmail 等でも background page で変換する? (元々ロードに時間が掛かるので現状は大して気にならない)

latex

  * latex: スクリプト生成機構の整理

    - latex.*.js: 現在三つのファイルに分かれているが、一つのファイルに纏める
    - ctxc: c++ による再実装?
      - javascript scanner (正規表現の対応も含めて)
      - command, letter, environment: command s\hoge() 形式の認識
      - context 形式の認識, context は (function(){})(); で囲む
      - package 形式の認識, (function(){})()
      - mwg_pp.awk: # ディレクティブは mwg_pp.awk に食わせる様に変更
      - mwg_pp.awk: css 等を混在。現在は直接 mwg.latex.pp.css に記入している。

  * optimize

    - latex/latex.cor.js: GetLetterHandler 呼出回数が多い → context を flatten する / pkg では直接コピーする。

  * latex: Courier New グリフのサイズが大きい。tt 用に別のフォントを埋め込むか?
  * viewtex: ページ内リンク highlight
  * viewtex: References の pdf へのリンク。
  * latex: \footnote 逆リンク
  * latex: \input, \include で他の .tex ファイルを読み込める様にする。XMLHttp
  * latex.\par, \n\n: まともな実装。

    - \begin{document} の ns.Writer に手を加える? または (ユーザコマンドではなく) コマンドを定義する。
    - latex: ctx:mode.para を ctx:mode.text に変更して ctx:mode.para (mode.text 継承) を新規に定義?
    - 現在の段落の状態 (&lt;p&gt; の中にいるかいないか) の情報を保持する変数、
    - コマンドによって自動的に &lt;p&gt; を閉じるか閉じないかを指定する方法。

  * latex/frac, etc: border-color: inherit を指定すれば外側の文字列の色が反映される (Cr)
  * latex: IE8-std で table{vertical-align:baseline} を利用?
  * latex 動作確認: \underbrace (IE8-std table{vertical-align:baseline;}?)
  * latex/フォント:

    - latex/cmd:\oint: 色々な積分記号のフォント (smallint を symb に。int は syma に。)
    - ■latex/aghtex_mathsymb, aghtex_mathsyma: 英字グリフを BaKoMa の物から AmsFonts の物に置き換える。
    - latex/font: 黒板体, 筆記体, etc: aghtex_mathsymb, aghtex_mathsyma に統合する?

      ? mathsymb, mathsyma と共存する書体を決定する?
      - mathsymb は標準的な Unicode での数学記号に対応する。一緒にするなら mathit?
      - mathsyma は代替的な自体を提供する。mathcal, mathbb 辺りと共存させれば OK。

    - latex/font:mathcal: 現在は cmsy5 より。潰れている。cmsy10 から作り直す
    - latex/font:mathbm: \imath \jmath \ell \weierstrass
    - latex/font:mathit: \Digamma \varkappa \backepsilon 移動
    - latex/font:mathsymb: \Digamma \varkappa \backepsilon 太字体
    - latex/font:mathsymb: \Digamma \varkappa \backepsilon 直立体


  * latex: コマンド

    - env:deluxetable, \AtBeginDocument, \AtEndDocument, \gdef
    - latex/env:equation: \eqno, \leqno, \notag, \eqnref, \theequation
    - latex: \sbox, \begin{lrbox}, \makebox, \parbox, \rule, \newsavebox, \savebox, \usebox, \raisebox
    - 空白関係

      - skip(縦空白): \bigskip, \medskip, \smallskip, \vfill, \addvspace
      - break(最小縦空白): \smallbreak \medbreak \bigbreak
      - enskip(空白文字): \enskip \quad \qquad (実装済)
      - kern(文字間隔調整): \enspace (plain TeX) \thinspace (text mode) \negthinspace (text mode) (実装済)
      - 各空白の幅の定義値を調べて、既存の適当な幅を置き換える。見た目を確認する (指定した値がそのまま表示されるとは限らないので)。
      - [[What commands are there for horizontal spacing? - TeX - LaTeX Stack Exchange>http://tex.stackexchange.com/questions/74353/what-commands-are-there-for-horizontal-spacing]]
      - [[spacing - Lengths and when to use them - TeX - LaTeX Stack Exchange>http://tex.stackexchange.com/questions/41476/lengths-and-when-to-use-them]]
      - length?: \thinmuskip \medmuskip \thickmuskip \smallskip \medskip \bigskip

    - latex: \pagenumbering, \pagestyle, \thispagestyle, \flushbottom, \onecolumn, \twocolumn, \raggedbottom
    - latex/length.ctx

      - latex:length: \addtolength, \settodepth, \settoheight, \settowidth; \width, \height, \depth, \totalheight
      - latex:length: \topmargin, \headhight, \headsep, \topskip, \textheight, \footskip, \marginparpush,
        \oddsidemargin, \evensidemargin, \textwidth, \marginparsep, \marginparwidth, \columnsep, \columnseprule
      - コマンド引数: minipage の width, hspace の padding-right, 等を長さに置換,

    - latex:env: letter, quote, quotation, picture, tabbing, theorem, titlepage, verse
    - latex: \listoffigures, \listoftables, \abstractname, \bibname, \contentsname, \listfigurename, \listtablename
